{"ast":null,"code":"import _asyncToGenerator from\"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import axios from\"axios\";import*as types from'./actionType';export var AuthLoginAction=function AuthLoginAction(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.post(\"https://online-books-app.herokuapp.com/api/users/login\",{email:email,password:password});case 3:_response=_context.sent;console.log(_response.data.user.token);if(_response.data.success){localStorage.setItem('token',_response.data.user.token);dispatch({type:types.AUTH_LOGGED_IN,payload:{token:_response.data.user.token,userData:_response.data.user}});}_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);dispatch({type:types.AUTH_LOGGED_IN_ERROR,payload:response.data});console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var AuthLogoutAction=function AuthLogoutAction(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:localStorage.removeItem('token');dispatch({type:types.AUTH_LOGGED_OUT,payload:{token:'',userData:''}});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/store/Actions/index.js"],"names":["axios","types","AuthLoginAction","email","password","dispatch","post","response","console","log","data","user","token","success","localStorage","setItem","type","AUTH_LOGGED_IN","payload","userData","AUTH_LOGGED_IN_ERROR","AuthLogoutAction","removeItem","AUTH_LOGGED_OUT"],"mappings":"gRAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,cAAvB,CAGA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,QAAR,iGAAqB,iBAAOC,QAAP,sKAErBL,CAAAA,KAAK,CAACM,IAAN,0DAAqE,CACxFH,KAAK,CAAEA,KADiF,CAExFC,QAAQ,CAAEA,QAF8E,CAArE,CAFqB,QAEtCG,SAFsC,eAM5CC,OAAO,CAACC,GAAR,CAAYF,SAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBC,KAA/B,EACA,GAAGL,SAAQ,CAACG,IAAT,CAAcG,OAAjB,CAAyB,CACrBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BR,SAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBC,KAAjD,EACAP,QAAQ,CAAC,CACLW,IAAI,CAAEf,KAAK,CAACgB,cADP,CAELC,OAAO,CAAE,CACLN,KAAK,CAAEL,SAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmBC,KADrB,CAELO,QAAQ,CAAEZ,SAAQ,CAACG,IAAT,CAAcC,IAFnB,CAFJ,CAAD,CAAR,CAQH,CAjB2C,+EAoB5CN,QAAQ,CAAC,CACLW,IAAI,CAAEf,KAAK,CAACmB,oBADP,CAELF,OAAO,CAAEX,QAAQ,CAACG,IAFb,CAAD,CAAR,CAIAF,OAAO,CAACC,GAAR,cAxB4C,oEAArB,gEAAxB,CA6BP,MAAO,IAAMY,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,mGAAM,kBAAOhB,QAAP,sHAC1BS,YAAY,CAACQ,UAAb,CAAwB,OAAxB,EACAjB,QAAQ,CAAC,CACLW,IAAI,CAAEf,KAAK,CAACsB,eADP,CAELL,OAAO,CAAE,CACLN,KAAK,CAAE,EADF,CAELO,QAAQ,CAAE,EAFL,CAFJ,CAAD,CAAR,CAF0B,wDAAN,kEAAzB","sourcesContent":["import axios from \"axios\"\nimport * as types from './actionType'\n\n\nexport const AuthLoginAction = (email, password) => async (dispatch) => {\n    try{\n        const response = await axios.post(`https://online-books-app.herokuapp.com/api/users/login`, {\n            email: email,\n            password: password\n          })\n        console.log(response.data.user.token)\n        if(response.data.success){\n            localStorage.setItem('token', response.data.user.token);\n            dispatch({\n                type: types.AUTH_LOGGED_IN,\n                payload: {\n                    token: response.data.user.token,\n                    userData: response.data.user\n                }\n            })\n\n        }\n    }\n    catch(e){\n        dispatch({\n            type: types.AUTH_LOGGED_IN_ERROR,\n            payload: response.data,\n        })\n        console.log(e)\n    }\n}\n\n\nexport const AuthLogoutAction = () => async (dispatch) => {\n            localStorage.removeItem('token')\n            dispatch({\n                type: types.AUTH_LOGGED_OUT,\n                payload: {\n                    token: '',\n                    userData: ''\n                }\n            }) \n}\n"]},"metadata":{},"sourceType":"module"}