{"ast":null,"code":"var _jsxFileName = \"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\src\\\\examples\\\\Sidenav\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useEffect } from \"react\"; // react-router-dom components\n\nimport { useLocation, NavLink } from \"react-router-dom\"; // prop-types is a library for typechecking of props.\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\"; // Material Dashboard 2 React example components\n\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\"; // Custom styles for the Sidenav\n\nimport SidenavRoot from \"examples/Sidenav/SidenavRoot\";\nimport sidenavLogoLabel from \"examples/Sidenav/styles/sidenav\"; // Material Dashboard 2 PRO React context\n\nimport { useMaterialUIController, setMiniSidenav, setTransparentSidenav, setWhiteSidenav } from \"context\";\nimport { connect } from \"react-redux\";\nimport * as actions from './../../store/Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidenav(_ref) {\n  _s();\n\n  let {\n    AuthLogoutAction,\n    color,\n    brand,\n    brandName,\n    routes,\n    ...rest\n  } = _ref;\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode,\n    sidenavColor\n  } = controller;\n  const location = useLocation();\n  const collapseName = location.pathname.replace(\"/\", \"\");\n  let textColor = \"white\";\n\n  if (transparentSidenav || whiteSidenav && !darkMode) {\n    textColor = \"dark\";\n  } else if (whiteSidenav && darkMode) {\n    textColor = \"inherit\";\n  }\n\n  const closeSidenav = () => setMiniSidenav(dispatch, true);\n\n  useEffect(() => {\n    // A function that sets the mini state of the sidenav.\n    function handleMiniSidenav() {\n      setMiniSidenav(dispatch, window.innerWidth < 1200);\n      setTransparentSidenav(dispatch, window.innerWidth < 1200 ? false : transparentSidenav);\n      setWhiteSidenav(dispatch, window.innerWidth < 1200 ? false : whiteSidenav);\n    }\n    /** \n     The event listener that's calling the handleMiniSidenav function when resizing the window.\n    */\n\n\n    window.addEventListener(\"resize\", handleMiniSidenav); // Call the handleMiniSidenav function to set the state with the initial value.\n\n    handleMiniSidenav(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\n  }, [dispatch, location]); // Render all the routes from the routes.js (All the visible items on the Sidenav)\n\n  const renderRoutes = routes.map(_ref2 => {\n    let {\n      type,\n      name,\n      icon,\n      title,\n      noCollapse,\n      key,\n      href,\n      route\n    } = _ref2;\n    let returnValue;\n\n    if (type === \"collapse\") {\n      returnValue = href ? /*#__PURE__*/_jsxDEV(Link, {\n        href: href,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        sx: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n          name: name,\n          icon: icon,\n          active: key === collapseName,\n          noCollapse: noCollapse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n        to: route,\n        children: /*#__PURE__*/_jsxDEV(SidenavCollapse, {\n          name: name,\n          icon: icon,\n          active: key === collapseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    } else if (type === \"title\") {\n      returnValue = /*#__PURE__*/_jsxDEV(MDTypography, {\n        color: textColor,\n        display: \"block\",\n        variant: \"caption\",\n        fontWeight: \"bold\",\n        textTransform: \"uppercase\",\n        pl: 3,\n        mt: 2,\n        mb: 1,\n        ml: 1,\n        children: title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    } else if (type === \"divider\") {\n      returnValue = /*#__PURE__*/_jsxDEV(Divider, {\n        light: !darkMode && !whiteSidenav && !transparentSidenav || darkMode && !transparentSidenav && whiteSidenav\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this);\n    }\n\n    return returnValue;\n  });\n  return /*#__PURE__*/_jsxDEV(SidenavRoot, { ...rest,\n    variant: \"permanent\",\n    ownerState: {\n      transparentSidenav,\n      whiteSidenav,\n      miniSidenav,\n      darkMode\n    },\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      pt: 3,\n      pb: 1,\n      px: 4,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        display: {\n          xs: \"block\",\n          xl: \"none\"\n        },\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        p: 1.625,\n        onClick: closeSidenav,\n        sx: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            sx: {\n              fontWeight: \"bold\"\n            },\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        component: NavLink,\n        to: \"/\",\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [brand && /*#__PURE__*/_jsxDEV(MDBox, {\n          component: \"img\",\n          src: brand,\n          alt: \"Brand\",\n          width: \"2rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          width: !brandName && \"100%\",\n          sx: theme => sidenavLogoLabel(theme, {\n            miniSidenav\n          }),\n          children: /*#__PURE__*/_jsxDEV(MDTypography, {\n            component: \"h6\",\n            variant: \"button\",\n            fontWeight: \"medium\",\n            color: textColor,\n            children: brandName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      light: !darkMode && !whiteSidenav && !transparentSidenav || darkMode && !transparentSidenav && whiteSidenav\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: renderRoutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      p: 2,\n      mt: \"auto\",\n      onClick: AuthLogoutAction,\n      children: /*#__PURE__*/_jsxDEV(MDButton, {\n        component: \"a\" // href=\"https://www.creative-tim.com/product/material-dashboard-pro-react\"\n        ,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        variant: \"gradient\",\n        color: sidenavColor,\n        fullWidth: true,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of Sidenav\n\n\n_s(Sidenav, \"pAAzfKHdOiPo6xdxG49or8YH0LQ=\", false, function () {\n  return [useMaterialUIController, useLocation];\n});\n\n_c = Sidenav;\nSidenav.defaultProps = {\n  color: \"info\",\n  brand: \"\"\n}; // Typechecking props for the Sidenav\n\nSidenav.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  brand: PropTypes.string,\n  brandName: PropTypes.string.isRequired,\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default connect(null, actions)(Sidenav);\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidenav\");","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/examples/Sidenav/index.js"],"names":["useEffect","useLocation","NavLink","PropTypes","List","Divider","Link","Icon","MDBox","MDTypography","MDButton","SidenavCollapse","SidenavRoot","sidenavLogoLabel","useMaterialUIController","setMiniSidenav","setTransparentSidenav","setWhiteSidenav","connect","actions","Sidenav","AuthLogoutAction","color","brand","brandName","routes","rest","controller","dispatch","miniSidenav","transparentSidenav","whiteSidenav","darkMode","sidenavColor","location","collapseName","pathname","replace","textColor","closeSidenav","handleMiniSidenav","window","innerWidth","addEventListener","removeEventListener","renderRoutes","map","type","name","icon","title","noCollapse","key","href","route","returnValue","textDecoration","xs","xl","cursor","fontWeight","theme","defaultProps","propTypes","oneOf","string","isRequired","arrayOf","object"],"mappings":"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","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useEffect } from \"react\";\n\n// react-router-dom components\nimport { useLocation, NavLink } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport SidenavCollapse from \"examples/Sidenav/SidenavCollapse\";\n\n// Custom styles for the Sidenav\nimport SidenavRoot from \"examples/Sidenav/SidenavRoot\";\nimport sidenavLogoLabel from \"examples/Sidenav/styles/sidenav\";\n\n// Material Dashboard 2 PRO React context\nimport {\n  useMaterialUIController,\n  setMiniSidenav,\n  setTransparentSidenav,\n  setWhiteSidenav,\n} from \"context\";\n\nimport {connect} from \"react-redux\";\nimport * as actions from './../../store/Actions'\n\nfunction Sidenav({ AuthLogoutAction, color, brand, brandName, routes, ...rest }) {\n  const [controller, dispatch] = useMaterialUIController();\n  const { miniSidenav, transparentSidenav, whiteSidenav, darkMode, sidenavColor } = controller;\n  const location = useLocation();\n  const collapseName = location.pathname.replace(\"/\", \"\");\n\n  let textColor = \"white\";\n\n  if (transparentSidenav || (whiteSidenav && !darkMode)) {\n    textColor = \"dark\";\n  } else if (whiteSidenav && darkMode) {\n    textColor = \"inherit\";\n  }\n\n  const closeSidenav = () => setMiniSidenav(dispatch, true);\n\n  useEffect(() => {\n    // A function that sets the mini state of the sidenav.\n    function handleMiniSidenav() {\n      setMiniSidenav(dispatch, window.innerWidth < 1200);\n      setTransparentSidenav(dispatch, window.innerWidth < 1200 ? false : transparentSidenav);\n      setWhiteSidenav(dispatch, window.innerWidth < 1200 ? false : whiteSidenav);\n    }\n\n    /** \n     The event listener that's calling the handleMiniSidenav function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleMiniSidenav);\n\n    // Call the handleMiniSidenav function to set the state with the initial value.\n    handleMiniSidenav();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleMiniSidenav);\n  }, [dispatch, location]);\n\n  // Render all the routes from the routes.js (All the visible items on the Sidenav)\n  const renderRoutes = routes.map(({ type, name, icon, title, noCollapse, key, href, route }) => {\n    let returnValue;\n\n    if (type === \"collapse\") {\n      returnValue = href ? (\n        <Link\n          href={href}\n          key={key}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          sx={{ textDecoration: \"none\" }}\n        >\n          <SidenavCollapse\n            name={name}\n            icon={icon}\n            active={key === collapseName}\n            noCollapse={noCollapse}\n          />\n        </Link>\n      ) : (\n        <NavLink key={key} to={route}>\n          <SidenavCollapse name={name} icon={icon} active={key === collapseName} />\n        </NavLink>\n      );\n    } else if (type === \"title\") {\n      returnValue = (\n        <MDTypography\n          key={key}\n          color={textColor}\n          display=\"block\"\n          variant=\"caption\"\n          fontWeight=\"bold\"\n          textTransform=\"uppercase\"\n          pl={3}\n          mt={2}\n          mb={1}\n          ml={1}\n        >\n          {title}\n        </MDTypography>\n      );\n    } else if (type === \"divider\") {\n      returnValue = (\n        <Divider\n          key={key}\n          light={\n            (!darkMode && !whiteSidenav && !transparentSidenav) ||\n            (darkMode && !transparentSidenav && whiteSidenav)\n          }\n        />\n      );\n    }\n\n    return returnValue;\n  });\n\n  return (\n    <SidenavRoot\n      {...rest}\n      variant=\"permanent\"\n      ownerState={{ transparentSidenav, whiteSidenav, miniSidenav, darkMode }}\n    >\n      <MDBox pt={3} pb={1} px={4} textAlign=\"center\">\n        <MDBox\n          display={{ xs: \"block\", xl: \"none\" }}\n          position=\"absolute\"\n          top={0}\n          right={0}\n          p={1.625}\n          onClick={closeSidenav}\n          sx={{ cursor: \"pointer\" }}\n        >\n          <MDTypography variant=\"h6\" color=\"secondary\">\n            <Icon sx={{ fontWeight: \"bold\" }}>close</Icon>\n          </MDTypography>\n        </MDBox>\n        <MDBox component={NavLink} to=\"/\" display=\"flex\" alignItems=\"center\">\n          {brand && <MDBox component=\"img\" src={brand} alt=\"Brand\" width=\"2rem\" />}\n          <MDBox\n            width={!brandName && \"100%\"}\n            sx={(theme) => sidenavLogoLabel(theme, { miniSidenav })}\n          >\n            <MDTypography component=\"h6\" variant=\"button\" fontWeight=\"medium\" color={textColor}>\n              {brandName}\n            </MDTypography>\n          </MDBox>\n        </MDBox>\n      </MDBox>\n      <Divider\n        light={\n          (!darkMode && !whiteSidenav && !transparentSidenav) ||\n          (darkMode && !transparentSidenav && whiteSidenav)\n        }\n      />\n      <List>{renderRoutes}</List>\n      <MDBox p={2} mt=\"auto\" onClick={AuthLogoutAction} >\n        <MDButton\n          component=\"a\"\n          // href=\"https://www.creative-tim.com/product/material-dashboard-pro-react\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          variant=\"gradient\"\n          color={sidenavColor}\n          fullWidth\n        >\n          Sign Out\n        </MDButton>\n      </MDBox>\n    </SidenavRoot>\n  );\n}\n\n// Setting default values for the props of Sidenav\nSidenav.defaultProps = {\n  color: \"info\",\n  brand: \"\",\n};\n\n// Typechecking props for the Sidenav\nSidenav.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  brand: PropTypes.string,\n  brandName: PropTypes.string.isRequired,\n  routes: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\n\nexport default connect(null,actions)(Sidenav)\n\n"]},"metadata":{},"sourceType":"module"}