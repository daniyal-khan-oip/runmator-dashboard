{"ast":null,"code":"var _jsxFileName = \"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\src\\\\context\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/\nimport { createContext, useContext, useReducer } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // The Soft UI Dashboard PRO Material main context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaterialUI = /*#__PURE__*/createContext(); // Setting custom name for the context which is visible on react dev tools\n\nMaterialUI.displayName = \"Runmator\"; // Material Dashboard 2 PRO React reducer\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\":\n      {\n        return { ...state,\n          miniSidenav: action.value\n        };\n      }\n\n    case \"TRANSPARENT_SIDENAV\":\n      {\n        return { ...state,\n          transparentSidenav: action.value\n        };\n      }\n\n    case \"WHITE_SIDENAV\":\n      {\n        return { ...state,\n          whiteSidenav: action.value\n        };\n      }\n\n    case \"SIDENAV_COLOR\":\n      {\n        return { ...state,\n          sidenavColor: action.value\n        };\n      }\n\n    case \"TRANSPARENT_NAVBAR\":\n      {\n        return { ...state,\n          transparentNavbar: action.value\n        };\n      }\n\n    case \"FIXED_NAVBAR\":\n      {\n        return { ...state,\n          fixedNavbar: action.value\n        };\n      }\n\n    case \"OPEN_CONFIGURATOR\":\n      {\n        return { ...state,\n          openConfigurator: action.value\n        };\n      }\n\n    case \"DIRECTION\":\n      {\n        return { ...state,\n          direction: action.value\n        };\n      }\n\n    case \"LAYOUT\":\n      {\n        return { ...state,\n          layout: action.value\n        };\n      }\n\n    case \"DARKMODE\":\n      {\n        return { ...state,\n          darkMode: action.value\n        };\n      }\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n} // Material Dashboard 2 PRO React context provider\n\n\nfunction MaterialUIControllerProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: false,\n    whiteSidenav: false,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n    darkMode: true\n  };\n  const [controller, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(MaterialUI.Provider, {\n    value: [controller, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n} // Material Dashboard 2 PRO React custom hook for using context\n\n\n_s(MaterialUIControllerProvider, \"fjjd7ZydehFye+0mKR7LjXUdcMg=\");\n\n_c = MaterialUIControllerProvider;\n\nfunction useMaterialUIController() {\n  _s2();\n\n  const context = useContext(MaterialUI);\n\n  if (!context) {\n    throw new Error(\"useMaterialUIController should be used inside the MaterialUIControllerProvider.\");\n  }\n\n  return context;\n} // Typechecking props for the MaterialUIControllerProvider\n\n\n_s2(useMaterialUIController, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nMaterialUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired\n}; // Context module functions\n\nconst setMiniSidenav = (dispatch, value) => dispatch({\n  type: \"MINI_SIDENAV\",\n  value\n});\n\nconst setTransparentSidenav = (dispatch, value) => dispatch({\n  type: \"TRANSPARENT_SIDENAV\",\n  value\n});\n\nconst setWhiteSidenav = (dispatch, value) => dispatch({\n  type: \"WHITE_SIDENAV\",\n  value\n});\n\nconst setSidenavColor = (dispatch, value) => dispatch({\n  type: \"SIDENAV_COLOR\",\n  value\n});\n\nconst setTransparentNavbar = (dispatch, value) => dispatch({\n  type: \"TRANSPARENT_NAVBAR\",\n  value\n});\n\nconst setFixedNavbar = (dispatch, value) => dispatch({\n  type: \"FIXED_NAVBAR\",\n  value\n});\n\nconst setOpenConfigurator = (dispatch, value) => dispatch({\n  type: \"OPEN_CONFIGURATOR\",\n  value\n});\n\nconst setDirection = (dispatch, value) => dispatch({\n  type: \"DIRECTION\",\n  value\n});\n\nconst setLayout = (dispatch, value) => dispatch({\n  type: \"LAYOUT\",\n  value\n});\n\nconst setDarkMode = (dispatch, value) => dispatch({\n  type: \"DARKMODE\",\n  value\n});\n\nexport { MaterialUIControllerProvider, useMaterialUIController, setMiniSidenav, setTransparentSidenav, setWhiteSidenav, setSidenavColor, setTransparentNavbar, setFixedNavbar, setOpenConfigurator, setDirection, setLayout, setDarkMode };\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUIControllerProvider\");","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/context/index.js"],"names":["createContext","useContext","useReducer","PropTypes","MaterialUI","displayName","reducer","state","action","type","miniSidenav","value","transparentSidenav","whiteSidenav","sidenavColor","transparentNavbar","fixedNavbar","openConfigurator","direction","layout","darkMode","Error","MaterialUIControllerProvider","children","initialState","controller","dispatch","useMaterialUIController","context","propTypes","node","isRequired","setMiniSidenav","setTransparentSidenav","setWhiteSidenav","setSidenavColor","setTransparentNavbar","setFixedNavbar","setOpenConfigurator","setDirection","setLayout","setDarkMode"],"mappings":"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","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n/**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/\n\nimport { createContext, useContext, useReducer } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// The Soft UI Dashboard PRO Material main context\nconst MaterialUI = createContext();\n\n// Setting custom name for the context which is visible on react dev tools\nMaterialUI.displayName = \"Runmator\";\n\n// Material Dashboard 2 PRO React reducer\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"MINI_SIDENAV\": {\n      return { ...state, miniSidenav: action.value };\n    }\n    case \"TRANSPARENT_SIDENAV\": {\n      return { ...state, transparentSidenav: action.value };\n    }\n    case \"WHITE_SIDENAV\": {\n      return { ...state, whiteSidenav: action.value };\n    }\n    case \"SIDENAV_COLOR\": {\n      return { ...state, sidenavColor: action.value };\n    }\n    case \"TRANSPARENT_NAVBAR\": {\n      return { ...state, transparentNavbar: action.value };\n    }\n    case \"FIXED_NAVBAR\": {\n      return { ...state, fixedNavbar: action.value };\n    }\n    case \"OPEN_CONFIGURATOR\": {\n      return { ...state, openConfigurator: action.value };\n    }\n    case \"DIRECTION\": {\n      return { ...state, direction: action.value };\n    }\n    case \"LAYOUT\": {\n      return { ...state, layout: action.value };\n    }\n    case \"DARKMODE\": {\n      return { ...state, darkMode: action.value };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\n// Material Dashboard 2 PRO React context provider\nfunction MaterialUIControllerProvider({ children }) {\n  const initialState = {\n    miniSidenav: false,\n    transparentSidenav: false,\n    whiteSidenav: false,\n    sidenavColor: \"info\",\n    transparentNavbar: true,\n    fixedNavbar: true,\n    openConfigurator: false,\n    direction: \"ltr\",\n    layout: \"dashboard\",\n    darkMode: true,\n  };\n\n  const [controller, dispatch] = useReducer(reducer, initialState);\n\n  return <MaterialUI.Provider value={[controller, dispatch]}>{children}</MaterialUI.Provider>;\n}\n\n// Material Dashboard 2 PRO React custom hook for using context\nfunction useMaterialUIController() {\n  const context = useContext(MaterialUI);\n\n  if (!context) {\n    throw new Error(\n      \"useMaterialUIController should be used inside the MaterialUIControllerProvider.\"\n    );\n  }\n\n  return context;\n}\n\n// Typechecking props for the MaterialUIControllerProvider\nMaterialUIControllerProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\n// Context module functions\nconst setMiniSidenav = (dispatch, value) => dispatch({ type: \"MINI_SIDENAV\", value });\nconst setTransparentSidenav = (dispatch, value) => dispatch({ type: \"TRANSPARENT_SIDENAV\", value });\nconst setWhiteSidenav = (dispatch, value) => dispatch({ type: \"WHITE_SIDENAV\", value });\nconst setSidenavColor = (dispatch, value) => dispatch({ type: \"SIDENAV_COLOR\", value });\nconst setTransparentNavbar = (dispatch, value) => dispatch({ type: \"TRANSPARENT_NAVBAR\", value });\nconst setFixedNavbar = (dispatch, value) => dispatch({ type: \"FIXED_NAVBAR\", value });\nconst setOpenConfigurator = (dispatch, value) => dispatch({ type: \"OPEN_CONFIGURATOR\", value });\nconst setDirection = (dispatch, value) => dispatch({ type: \"DIRECTION\", value });\nconst setLayout = (dispatch, value) => dispatch({ type: \"LAYOUT\", value });\nconst setDarkMode = (dispatch, value) => dispatch({ type: \"DARKMODE\", value });\n\nexport {\n  MaterialUIControllerProvider,\n  useMaterialUIController,\n  setMiniSidenav,\n  setTransparentSidenav,\n  setWhiteSidenav,\n  setSidenavColor,\n  setTransparentNavbar,\n  setFixedNavbar,\n  setOpenConfigurator,\n  setDirection,\n  setLayout,\n  setDarkMode,\n};\n"]},"metadata":{},"sourceType":"module"}