{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Navbars/DefaultNavbar/DefaultNavbarLink.js\";\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\"; // react-router-dom components\n\nimport { Link } from \"react-router-dom\"; // @mui material components\n\nimport Icon from \"@mui/material/Icon\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DefaultNavbarLink(_ref) {\n  let {\n    icon,\n    name,\n    route,\n    light\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBox, {\n      component: Link,\n      to: route,\n      mx: 1,\n      p: 1,\n      display: \"flex\",\n      alignItems: \"center\",\n      sx: {\n        cursor: \"pointer\",\n        userSelect: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        sx: {\n          color: _ref2 => {\n            let {\n              palette: {\n                white,\n                secondary\n              }\n            } = _ref2;\n            return light ? white.main : secondary.main;\n          },\n          verticalAlign: \"middle\"\n        },\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"button\",\n        fontWeight: \"regular\",\n        color: light ? \"white\" : \"dark\",\n        textTransform: \"capitalize\",\n        sx: {\n          width: \"100%\",\n          lineHeight: 0\n        },\n        children: [\"\\xA0\", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // Typechecking props for the DefaultNavbarLink\n\n\n_c = DefaultNavbarLink;\nDefaultNavbarLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n  light: PropTypes.bool.isRequired\n};\nexport default DefaultNavbarLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultNavbarLink\");","map":{"version":3,"sources":["/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Navbars/DefaultNavbar/DefaultNavbarLink.js"],"names":["PropTypes","Link","Icon","MDBox","MDTypography","DefaultNavbarLink","icon","name","route","light","cursor","userSelect","color","palette","white","secondary","main","verticalAlign","width","lineHeight","propTypes","string","isRequired","bool"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;;AAEA,SAASC,iBAAT,OAAyD;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,GAA8B;AACvD,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,SAAS,EAAER,IADb;AAEE,MAAA,EAAE,EAAEO,KAFN;AAGE,MAAA,EAAE,EAAE,CAHN;AAIE,MAAA,CAAC,EAAE,CAJL;AAKE,MAAA,OAAO,EAAC,MALV;AAME,MAAA,UAAU,EAAC,QANb;AAOE,MAAA,EAAE,EAAE;AAAEE,QAAAA,MAAM,EAAE,SAAV;AAAqBC,QAAAA,UAAU,EAAE;AAAjC,OAPN;AAAA,8BASE,QAAC,IAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,KAAK,EAAE;AAAA,gBAAC;AAAEC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,KAAF;AAASC,gBAAAA;AAAT;AAAX,aAAD;AAAA,mBAAwCN,KAAK,GAAGK,KAAK,CAACE,IAAT,GAAgBD,SAAS,CAACC,IAAvE;AAAA,WADL;AAEFC,UAAAA,aAAa,EAAE;AAFb,SADN;AAAA,kBAMGX;AANH;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,YAAD;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,UAAU,EAAC,SAFb;AAGE,QAAA,KAAK,EAAEG,KAAK,GAAG,OAAH,GAAa,MAH3B;AAIE,QAAA,aAAa,EAAC,YAJhB;AAKE,QAAA,EAAE,EAAE;AAAES,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,UAAU,EAAE;AAA7B,SALN;AAAA,2BAOSZ,IAPT;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA+BD,C,CAED;;;KAlCSF,iB;AAmCTA,iBAAiB,CAACe,SAAlB,GAA8B;AAC5Bd,EAAAA,IAAI,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADK;AAE5Bf,EAAAA,IAAI,EAAEP,SAAS,CAACqB,MAAV,CAAiBC,UAFK;AAG5Bd,EAAAA,KAAK,EAAER,SAAS,CAACqB,MAAV,CAAiBC,UAHI;AAI5Bb,EAAAA,KAAK,EAAET,SAAS,CAACuB,IAAV,CAAeD;AAJM,CAA9B;AAOA,eAAejB,iBAAf","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\nfunction DefaultNavbarLink({ icon, name, route, light }) {\n  return (\n    <>\n      <MDBox\n        component={Link}\n        to={route}\n        mx={1}\n        p={1}\n        display=\"flex\"\n        alignItems=\"center\"\n        sx={{ cursor: \"pointer\", userSelect: \"none\" }}\n      >\n        <Icon\n          sx={{\n            color: ({ palette: { white, secondary } }) => (light ? white.main : secondary.main),\n            verticalAlign: \"middle\",\n          }}\n        >\n          {icon}\n        </Icon>\n        <MDTypography\n          variant=\"button\"\n          fontWeight=\"regular\"\n          color={light ? \"white\" : \"dark\"}\n          textTransform=\"capitalize\"\n          sx={{ width: \"100%\", lineHeight: 0 }}\n        >\n          &nbsp;{name}\n        </MDTypography>\n      </MDBox>\n    </>\n  );\n}\n\n// Typechecking props for the DefaultNavbarLink\nDefaultNavbarLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n  light: PropTypes.bool.isRequired,\n};\n\nexport default DefaultNavbarLink;\n"]},"metadata":{},"sourceType":"module"}