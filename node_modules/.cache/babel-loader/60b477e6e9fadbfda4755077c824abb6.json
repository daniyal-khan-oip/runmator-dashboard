{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/LayoutContainers/DashboardLayout/index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useEffect } from \"react\"; // react-router-dom components\n\nimport { useLocation } from \"react-router-dom\"; // prop-types is a library for typechecking of props.\n\nimport PropTypes from \"prop-types\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\"; // Material Dashboard 2 PRO React context\n\nimport { useMaterialUIController, setLayout } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashboardLayout(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav\n  } = controller;\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    setLayout(dispatch, \"dashboard\");\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(MDBox, {\n    sx: _ref2 => {\n      let {\n        breakpoints,\n        transitions,\n        functions: {\n          pxToRem\n        }\n      } = _ref2;\n      return {\n        p: 3,\n        position: \"relative\",\n        [breakpoints.up(\"xl\")]: {\n          marginLeft: miniSidenav ? pxToRem(120) : pxToRem(274),\n          transition: transitions.create([\"margin-left\", \"margin-right\"], {\n            easing: transitions.easing.easeInOut,\n            duration: transitions.duration.standard\n          })\n        }\n      };\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} // Typechecking props for the DashboardLayout\n\n\n_s(DashboardLayout, \"SGx5he+J4RRYQnXnGiWw1LshamE=\", false, function () {\n  return [useMaterialUIController, useLocation];\n});\n\n_c = DashboardLayout;\nDashboardLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default DashboardLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"sources":["/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/LayoutContainers/DashboardLayout/index.js"],"names":["useEffect","useLocation","PropTypes","MDBox","useMaterialUIController","setLayout","DashboardLayout","children","controller","dispatch","miniSidenav","pathname","breakpoints","transitions","functions","pxToRem","p","position","up","marginLeft","transition","create","easing","easeInOut","duration","standard","propTypes","node","isRequired"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;;AACA,SAASC,uBAAT,EAAkCC,SAAlC,QAAmD,SAAnD;;;AAEA,SAASC,eAAT,OAAuC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACrC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBL,uBAAuB,EAAtD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBF,UAAxB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeV,WAAW,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAACI,QAAD,EAAW,WAAX,CAAT;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,KAAD;AACE,IAAA,EAAE,EAAE;AAAA,UAAC;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,WAAf;AAA4BC,QAAAA,SAAS,EAAE;AAAEC,UAAAA;AAAF;AAAvC,OAAD;AAAA,aAA2D;AAC7DC,QAAAA,CAAC,EAAE,CAD0D;AAE7DC,QAAAA,QAAQ,EAAE,UAFmD;AAI7D,SAACL,WAAW,CAACM,EAAZ,CAAe,IAAf,CAAD,GAAwB;AACtBC,UAAAA,UAAU,EAAET,WAAW,GAAGK,OAAO,CAAC,GAAD,CAAV,GAAkBA,OAAO,CAAC,GAAD,CAD1B;AAEtBK,UAAAA,UAAU,EAAEP,WAAW,CAACQ,MAAZ,CAAmB,CAAC,aAAD,EAAgB,cAAhB,CAAnB,EAAoD;AAC9DC,YAAAA,MAAM,EAAET,WAAW,CAACS,MAAZ,CAAmBC,SADmC;AAE9DC,YAAAA,QAAQ,EAAEX,WAAW,CAACW,QAAZ,CAAqBC;AAF+B,WAApD;AAFU;AAJqC,OAA3D;AAAA,KADN;AAAA,cAcGlB;AAdH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,C,CAED;;;GA7BSD,e;UACwBF,uB,EAEVH,W;;;KAHdK,e;AA8BTA,eAAe,CAACoB,SAAhB,GAA4B;AAC1BnB,EAAAA,QAAQ,EAAEL,SAAS,CAACyB,IAAV,CAAeC;AADC,CAA5B;AAIA,eAAetB,eAAf","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useEffect } from \"react\";\n\n// react-router-dom components\nimport { useLocation } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 PRO React context\nimport { useMaterialUIController, setLayout } from \"context\";\n\nfunction DashboardLayout({ children }) {\n  const [controller, dispatch] = useMaterialUIController();\n  const { miniSidenav } = controller;\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    setLayout(dispatch, \"dashboard\");\n  }, [pathname]);\n\n  return (\n    <MDBox\n      sx={({ breakpoints, transitions, functions: { pxToRem } }) => ({\n        p: 3,\n        position: \"relative\",\n\n        [breakpoints.up(\"xl\")]: {\n          marginLeft: miniSidenav ? pxToRem(120) : pxToRem(274),\n          transition: transitions.create([\"margin-left\", \"margin-right\"], {\n            easing: transitions.easing.easeInOut,\n            duration: transitions.duration.standard,\n          }),\n        },\n      })}\n    >\n      {children}\n    </MDBox>\n  );\n}\n\n// Typechecking props for the DashboardLayout\nDashboardLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default DashboardLayout;\n"]},"metadata":{},"sourceType":"module"}