{"ast":null,"code":"import _objectSpread from\"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _objectWithoutProperties from\"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectWithoutProperties.js\";var _excluded=[\"color\",\"icon\",\"title\",\"dateTime\",\"content\",\"close\",\"bgWhite\"];/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/ // prop-types is a library for typechecking of props\n// @mui material components\nimport Snackbar from\"@mui/material/Snackbar\";import IconButton from\"@mui/material/IconButton\";import Icon from\"@mui/material/Icon\";import Divider from\"@mui/material/Divider\";import Fade from\"@mui/material/Fade\";// Material Dashboard 2 React components\nimport MDBox from\"components/MDBox\";import MDTypography from\"components/MDTypography\";// Custom styles for the MDSnackbar\nimport MDSnackbarIconRoot from\"components/MDSnackbar/MDSnackbarIconRoot\";// Material Dashboard 2 PRO React context\nimport{useMaterialUIController}from\"context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MDSnackbar(_ref){var _color=_ref.color,icon=_ref.icon,title=_ref.title,dateTime=_ref.dateTime,content=_ref.content,close=_ref.close,bgWhite=_ref.bgWhite,rest=_objectWithoutProperties(_ref,_excluded);var _useMaterialUIControl=useMaterialUIController(),_useMaterialUIControl2=_slicedToArray(_useMaterialUIControl,1),controller=_useMaterialUIControl2[0];var darkMode=controller.darkMode;var titleColor;var dateTimeColor;var dividerColor;if(bgWhite){titleColor=_color;dateTimeColor=\"dark\";dividerColor=false;}else if(_color===\"light\"){titleColor=darkMode?\"inherit\":\"dark\";dateTimeColor=darkMode?\"inherit\":\"text\";dividerColor=false;}else{titleColor=\"white\";dateTimeColor=\"white\";dividerColor=true;}return/*#__PURE__*/_jsx(Snackbar,_objectSpread(_objectSpread({TransitionComponent:Fade,autoHideDuration:5000,anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"}},rest),{},{action:/*#__PURE__*/_jsx(IconButton,{size:\"small\",\"aria-label\":\"close\",color:\"inherit\",onClick:close,children:/*#__PURE__*/_jsx(Icon,{fontSize:\"small\",children:\"close\"})}),children:/*#__PURE__*/_jsxs(MDBox,{variant:bgWhite?\"contained\":\"gradient\",bgColor:bgWhite?\"white\":_color,minWidth:\"21.875rem\",maxWidth:\"100%\",shadow:\"md\",borderRadius:\"md\",p:1,sx:{backgroundColor:function backgroundColor(_ref2){var palette=_ref2.palette;return darkMode?palette.background.card:palette[_color]||palette.white.main;}},children:[/*#__PURE__*/_jsxs(MDBox,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",color:\"dark\",p:1.5,children:[/*#__PURE__*/_jsxs(MDBox,{display:\"flex\",alignItems:\"center\",lineHeight:0,children:[/*#__PURE__*/_jsx(MDSnackbarIconRoot,{fontSize:\"small\",ownerState:{color:_color,bgWhite:bgWhite},children:icon}),/*#__PURE__*/_jsx(MDTypography,{variant:\"button\",fontWeight:\"medium\",color:titleColor,textGradient:bgWhite,children:title})]}),/*#__PURE__*/_jsxs(MDBox,{display:\"flex\",alignItems:\"center\",lineHeight:0,children:[/*#__PURE__*/_jsx(MDTypography,{variant:\"caption\",color:dateTimeColor,children:dateTime}),/*#__PURE__*/_jsx(Icon,{sx:{color:function color(_ref3){var _ref3$palette=_ref3.palette,dark=_ref3$palette.dark,white=_ref3$palette.white;return bgWhite&&!darkMode||_color===\"light\"?dark.main:white.main;},fontWeight:function fontWeight(_ref4){var fontWeightBold=_ref4.typography.fontWeightBold;return fontWeightBold;},cursor:\"pointer\",marginLeft:2,transform:\"translateY(-1px)\"},onClick:close,children:\"close\"})]})]}),/*#__PURE__*/_jsx(Divider,{sx:{margin:0},light:dividerColor}),/*#__PURE__*/_jsx(MDBox,{p:1.5,sx:{fontSize:function fontSize(_ref5){var size=_ref5.typography.size;return size.sm;},color:function color(_ref6){var _ref6$palette=_ref6.palette,white=_ref6$palette.white,text=_ref6$palette.text;var colorValue=bgWhite||_color===\"light\"?text.main:white.main;if(darkMode){colorValue=_color===\"light\"?\"inherit\":white.main;}return colorValue;}},children:content})]})}));}// Setting default values for the props of MDSnackbar\nMDSnackbar.defaultProps={bgWhite:false,color:\"info\"};// Typechecking props for MDSnackbar\nexport default MDSnackbar;","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/components/MDSnackbar/index.js"],"names":["Snackbar","IconButton","Icon","Divider","Fade","MDBox","MDTypography","MDSnackbarIconRoot","useMaterialUIController","MDSnackbar","color","icon","title","dateTime","content","close","bgWhite","rest","controller","darkMode","titleColor","dateTimeColor","dividerColor","vertical","horizontal","backgroundColor","palette","background","card","white","main","dark","fontWeight","fontWeightBold","typography","cursor","marginLeft","transform","margin","fontSize","size","sm","text","colorValue","defaultProps"],"mappings":"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","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Snackbar from \"@mui/material/Snackbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Icon from \"@mui/material/Icon\";\nimport Divider from \"@mui/material/Divider\";\nimport Fade from \"@mui/material/Fade\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// Custom styles for the MDSnackbar\nimport MDSnackbarIconRoot from \"components/MDSnackbar/MDSnackbarIconRoot\";\n\n// Material Dashboard 2 PRO React context\nimport { useMaterialUIController } from \"context\";\n\nfunction MDSnackbar({ color, icon, title, dateTime, content, close, bgWhite, ...rest }) {\n  const [controller] = useMaterialUIController();\n  const { darkMode } = controller;\n\n  let titleColor;\n  let dateTimeColor;\n  let dividerColor;\n\n  if (bgWhite) {\n    titleColor = color;\n    dateTimeColor = \"dark\";\n    dividerColor = false;\n  } else if (color === \"light\") {\n    titleColor = darkMode ? \"inherit\" : \"dark\";\n    dateTimeColor = darkMode ? \"inherit\" : \"text\";\n    dividerColor = false;\n  } else {\n    titleColor = \"white\";\n    dateTimeColor = \"white\";\n    dividerColor = true;\n  }\n\n  return (\n    <Snackbar\n      TransitionComponent={Fade}\n      autoHideDuration={5000}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      {...rest}\n      action={\n        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={close}>\n          <Icon fontSize=\"small\">close</Icon>\n        </IconButton>\n      }\n    >\n      <MDBox\n        variant={bgWhite ? \"contained\" : \"gradient\"}\n        bgColor={bgWhite ? \"white\" : color}\n        minWidth=\"21.875rem\"\n        maxWidth=\"100%\"\n        shadow=\"md\"\n        borderRadius=\"md\"\n        p={1}\n        sx={{\n          backgroundColor: ({ palette }) =>\n            darkMode ? palette.background.card : palette[color] || palette.white.main,\n        }}\n      >\n        <MDBox\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          color=\"dark\"\n          p={1.5}\n        >\n          <MDBox display=\"flex\" alignItems=\"center\" lineHeight={0}>\n            <MDSnackbarIconRoot fontSize=\"small\" ownerState={{ color, bgWhite }}>\n              {icon}\n            </MDSnackbarIconRoot>\n            <MDTypography\n              variant=\"button\"\n              fontWeight=\"medium\"\n              color={titleColor}\n              textGradient={bgWhite}\n            >\n              {title}\n            </MDTypography>\n          </MDBox>\n          <MDBox display=\"flex\" alignItems=\"center\" lineHeight={0}>\n            <MDTypography variant=\"caption\" color={dateTimeColor}>\n              {dateTime}\n            </MDTypography>\n            <Icon\n              sx={{\n                color: ({ palette: { dark, white } }) =>\n                  (bgWhite && !darkMode) || color === \"light\" ? dark.main : white.main,\n                fontWeight: ({ typography: { fontWeightBold } }) => fontWeightBold,\n                cursor: \"pointer\",\n                marginLeft: 2,\n                transform: \"translateY(-1px)\",\n              }}\n              onClick={close}\n            >\n              close\n            </Icon>\n          </MDBox>\n        </MDBox>\n        <Divider sx={{ margin: 0 }} light={dividerColor} />\n        <MDBox\n          p={1.5}\n          sx={{\n            fontSize: ({ typography: { size } }) => size.sm,\n            color: ({ palette: { white, text } }) => {\n              let colorValue = bgWhite || color === \"light\" ? text.main : white.main;\n\n              if (darkMode) {\n                colorValue = color === \"light\" ? \"inherit\" : white.main;\n              }\n\n              return colorValue;\n            },\n          }}\n        >\n          {content}\n        </MDBox>\n      </MDBox>\n    </Snackbar>\n  );\n}\n\n// Setting default values for the props of MDSnackbar\nMDSnackbar.defaultProps = {\n  bgWhite: false,\n  color: \"info\",\n};\n\n// Typechecking props for MDSnackbar\nMDSnackbar.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"dark\",\n    \"light\",\n  ]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  dateTime: PropTypes.string.isRequired,\n  content: PropTypes.node.isRequired,\n  close: PropTypes.func.isRequired,\n  bgWhite: PropTypes.bool,\n};\n\nexport default MDSnackbar;\n"]},"metadata":{},"sourceType":"module"}