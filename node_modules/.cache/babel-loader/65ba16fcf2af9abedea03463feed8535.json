{"ast":null,"code":"/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\nimport { styled } from \"@mui/material/styles\";\nexport default styled(Icon)(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const {\n    palette,\n    functions,\n    typography\n  } = theme;\n  const {\n    color,\n    bgWhite\n  } = ownerState;\n  const {\n    white,\n    transparent,\n    gradients\n  } = palette;\n  const {\n    pxToRem,\n    linearGradient\n  } = functions;\n  const {\n    size\n  } = typography; // backgroundImage value\n\n  let backgroundImageValue;\n\n  if (bgWhite) {\n    backgroundImageValue = gradients[color] ? linearGradient(gradients[color].main, gradients[color].state) : linearGradient(gradients.info.main, gradients.info.state);\n  } else if (color === \"light\") {\n    backgroundImageValue = linearGradient(gradients.dark.main, gradients.dark.state);\n  }\n\n  return {\n    backgroundImage: backgroundImageValue,\n    WebkitTextFillColor: bgWhite || color === \"light\" ? transparent.main : white.main,\n    WebkitBackgroundClip: \"text\",\n    marginRight: pxToRem(8),\n    fontSize: size.lg,\n    transform: `translateY(${pxToRem(-2)})`\n  };\n});","map":{"version":3,"sources":["/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/components/MDSnackbar/MDSnackbarIconRoot.js"],"names":["Icon","styled","theme","ownerState","palette","functions","typography","color","bgWhite","white","transparent","gradients","pxToRem","linearGradient","size","backgroundImageValue","main","state","info","dark","backgroundImage","WebkitTextFillColor","WebkitBackgroundClip","marginRight","fontSize","lg","transform"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAEA,eAAeA,MAAM,CAACD,IAAD,CAAN,CAAa,QAA2B;AAAA,MAA1B;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA0B;AACrD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAqCJ,KAA3C;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBL,UAA3B;AAEA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA;AAAtB,MAAoCP,OAA1C;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA8BR,SAApC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWR,UAAjB,CANqD,CAQrD;;AACA,MAAIS,oBAAJ;;AAEA,MAAIP,OAAJ,EAAa;AACXO,IAAAA,oBAAoB,GAAGJ,SAAS,CAACJ,KAAD,CAAT,GACnBM,cAAc,CAACF,SAAS,CAACJ,KAAD,CAAT,CAAiBS,IAAlB,EAAwBL,SAAS,CAACJ,KAAD,CAAT,CAAiBU,KAAzC,CADK,GAEnBJ,cAAc,CAACF,SAAS,CAACO,IAAV,CAAeF,IAAhB,EAAsBL,SAAS,CAACO,IAAV,CAAeD,KAArC,CAFlB;AAGD,GAJD,MAIO,IAAIV,KAAK,KAAK,OAAd,EAAuB;AAC5BQ,IAAAA,oBAAoB,GAAGF,cAAc,CAACF,SAAS,CAACQ,IAAV,CAAeH,IAAhB,EAAsBL,SAAS,CAACQ,IAAV,CAAeF,KAArC,CAArC;AACD;;AAED,SAAO;AACLG,IAAAA,eAAe,EAAEL,oBADZ;AAELM,IAAAA,mBAAmB,EAAEb,OAAO,IAAID,KAAK,KAAK,OAArB,GAA+BG,WAAW,CAACM,IAA3C,GAAkDP,KAAK,CAACO,IAFxE;AAGLM,IAAAA,oBAAoB,EAAE,MAHjB;AAILC,IAAAA,WAAW,EAAEX,OAAO,CAAC,CAAD,CAJf;AAKLY,IAAAA,QAAQ,EAAEV,IAAI,CAACW,EALV;AAMLC,IAAAA,SAAS,EAAG,cAAad,OAAO,CAAC,CAAC,CAAF,CAAK;AANhC,GAAP;AAQD,CA3Bc,CAAf","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// @mui material components\nimport Icon from \"@mui/material/Icon\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Icon)(({ theme, ownerState }) => {\n  const { palette, functions, typography } = theme;\n  const { color, bgWhite } = ownerState;\n\n  const { white, transparent, gradients } = palette;\n  const { pxToRem, linearGradient } = functions;\n  const { size } = typography;\n\n  // backgroundImage value\n  let backgroundImageValue;\n\n  if (bgWhite) {\n    backgroundImageValue = gradients[color]\n      ? linearGradient(gradients[color].main, gradients[color].state)\n      : linearGradient(gradients.info.main, gradients.info.state);\n  } else if (color === \"light\") {\n    backgroundImageValue = linearGradient(gradients.dark.main, gradients.dark.state);\n  }\n\n  return {\n    backgroundImage: backgroundImageValue,\n    WebkitTextFillColor: bgWhite || color === \"light\" ? transparent.main : white.main,\n    WebkitBackgroundClip: \"text\",\n    marginRight: pxToRem(8),\n    fontSize: size.lg,\n    transform: `translateY(${pxToRem(-2)})`,\n  };\n});\n"]},"metadata":{},"sourceType":"module"}