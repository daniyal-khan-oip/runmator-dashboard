{"ast":null,"code":"/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/ // react-router-dom components\nimport{Link}from\"react-router-dom\";// prop-types is a library for typechecking of props\n// @mui material components\nimport Card from\"@mui/material/Card\";import CardMedia from\"@mui/material/CardMedia\";import Tooltip from\"@mui/material/Tooltip\";// Material Dashboard 2 React components\nimport MDBox from\"components/MDBox\";import MDTypography from\"components/MDTypography\";import MDButton from\"components/MDButton\";import MDAvatar from\"components/MDAvatar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DefaultProjectCard(_ref){var image=_ref.image,label=_ref.label,title=_ref.title,description=_ref.description,action=_ref.action,authors=_ref.authors;var renderAuthors=authors.map(function(_ref2){var media=_ref2.image,name=_ref2.name;return/*#__PURE__*/_jsx(Tooltip,{title:name,placement:\"bottom\",children:/*#__PURE__*/_jsx(MDAvatar,{src:media,alt:name,size:\"xs\",sx:function sx(_ref3){var borderWidth=_ref3.borders.borderWidth,white=_ref3.palette.white;return{border:\"\".concat(borderWidth[2],\" solid \").concat(white.main),cursor:\"pointer\",position:\"relative\",ml:-1.25,\"&:hover, &:focus\":{zIndex:\"10\"}};}})},name);});return/*#__PURE__*/_jsxs(Card,{sx:{display:\"flex\",flexDirection:\"column\",backgroundColor:\"transparent\",boxShadow:\"none\",overflow:\"visible\"},children:[/*#__PURE__*/_jsx(MDBox,{position:\"relative\",width:\"100.25%\",shadow:\"xl\",borderRadius:\"xl\",children:/*#__PURE__*/_jsx(CardMedia,{src:image,component:\"img\",title:title,sx:{maxWidth:\"100%\",margin:0,boxShadow:function boxShadow(_ref4){var md=_ref4.boxShadows.md;return md;},objectFit:\"cover\",objectPosition:\"center\"}})}),/*#__PURE__*/_jsxs(MDBox,{mt:1,mx:0.5,children:[/*#__PURE__*/_jsx(MDTypography,{variant:\"button\",fontWeight:\"regular\",color:\"text\",textTransform:\"capitalize\",children:label}),/*#__PURE__*/_jsx(MDBox,{mb:1,children:action.type===\"internal\"?/*#__PURE__*/_jsx(MDTypography,{component:Link,to:action.route,variant:\"h5\",textTransform:\"capitalize\",children:title}):/*#__PURE__*/_jsx(MDTypography,{component:\"a\",href:action.route,target:\"_blank\",rel:\"noreferrer\",variant:\"h5\",textTransform:\"capitalize\",children:title})}),/*#__PURE__*/_jsx(MDBox,{mb:3,lineHeight:0,children:/*#__PURE__*/_jsx(MDTypography,{variant:\"button\",fontWeight:\"light\",color:\"text\",children:description})}),/*#__PURE__*/_jsxs(MDBox,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:[action.type===\"internal\"?/*#__PURE__*/_jsx(MDButton,{component:Link,to:action.route,variant:\"outlined\",size:\"small\",color:action.color,children:action.label}):/*#__PURE__*/_jsx(MDButton,{component:\"a\",href:action.route,target:\"_blank\",rel:\"noreferrer\",variant:\"outlined\",size:\"small\",color:action.color,children:action.label}),/*#__PURE__*/_jsx(MDBox,{display:\"flex\",children:renderAuthors})]})]})]});}// Setting default values for the props of DefaultProjectCard\nDefaultProjectCard.defaultProps={authors:[]};// Typechecking props for the DefaultProjectCard\nexport default DefaultProjectCard;","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/examples/Cards/ProjectCards/DefaultProjectCard/index.js"],"names":["Link","Card","CardMedia","Tooltip","MDBox","MDTypography","MDButton","MDAvatar","DefaultProjectCard","image","label","title","description","action","authors","renderAuthors","map","media","name","borderWidth","borders","white","palette","border","main","cursor","position","ml","zIndex","display","flexDirection","backgroundColor","boxShadow","overflow","maxWidth","margin","md","boxShadows","objectFit","objectPosition","type","route","color","defaultProps"],"mappings":"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","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\nimport MDAvatar from \"components/MDAvatar\";\n\nfunction DefaultProjectCard({ image, label, title, description, action, authors }) {\n  const renderAuthors = authors.map(({ image: media, name }) => (\n    <Tooltip key={name} title={name} placement=\"bottom\">\n      <MDAvatar\n        src={media}\n        alt={name}\n        size=\"xs\"\n        sx={({ borders: { borderWidth }, palette: { white } }) => ({\n          border: `${borderWidth[2]} solid ${white.main}`,\n          cursor: \"pointer\",\n          position: \"relative\",\n          ml: -1.25,\n\n          \"&:hover, &:focus\": {\n            zIndex: \"10\",\n          },\n        })}\n      />\n    </Tooltip>\n  ));\n\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: \"transparent\",\n        boxShadow: \"none\",\n        overflow: \"visible\",\n      }}\n    >\n      <MDBox position=\"relative\" width=\"100.25%\" shadow=\"xl\" borderRadius=\"xl\">\n        <CardMedia\n          src={image}\n          component=\"img\"\n          title={title}\n          sx={{\n            maxWidth: \"100%\",\n            margin: 0,\n            boxShadow: ({ boxShadows: { md } }) => md,\n            objectFit: \"cover\",\n            objectPosition: \"center\",\n          }}\n        />\n      </MDBox>\n      <MDBox mt={1} mx={0.5}>\n        <MDTypography variant=\"button\" fontWeight=\"regular\" color=\"text\" textTransform=\"capitalize\">\n          {label}\n        </MDTypography>\n        <MDBox mb={1}>\n          {action.type === \"internal\" ? (\n            <MDTypography\n              component={Link}\n              to={action.route}\n              variant=\"h5\"\n              textTransform=\"capitalize\"\n            >\n              {title}\n            </MDTypography>\n          ) : (\n            <MDTypography\n              component=\"a\"\n              href={action.route}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"h5\"\n              textTransform=\"capitalize\"\n            >\n              {title}\n            </MDTypography>\n          )}\n        </MDBox>\n        <MDBox mb={3} lineHeight={0}>\n          <MDTypography variant=\"button\" fontWeight=\"light\" color=\"text\">\n            {description}\n          </MDTypography>\n        </MDBox>\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          {action.type === \"internal\" ? (\n            <MDButton\n              component={Link}\n              to={action.route}\n              variant=\"outlined\"\n              size=\"small\"\n              color={action.color}\n            >\n              {action.label}\n            </MDButton>\n          ) : (\n            <MDButton\n              component=\"a\"\n              href={action.route}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"outlined\"\n              size=\"small\"\n              color={action.color}\n            >\n              {action.label}\n            </MDButton>\n          )}\n          <MDBox display=\"flex\">{renderAuthors}</MDBox>\n        </MDBox>\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of DefaultProjectCard\nDefaultProjectCard.defaultProps = {\n  authors: [],\n};\n\n// Typechecking props for the DefaultProjectCard\nDefaultProjectCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  action: PropTypes.shape({\n    type: PropTypes.oneOf([\"external\", \"internal\"]),\n    route: PropTypes.string.isRequired,\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"light\",\n      \"dark\",\n      \"white\",\n    ]).isRequired,\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n  authors: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default DefaultProjectCard;\n"]},"metadata":{},"sourceType":"module"}