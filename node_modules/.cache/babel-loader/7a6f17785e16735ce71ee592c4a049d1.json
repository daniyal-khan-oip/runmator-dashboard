{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/components/MDBadge/index.js\";\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { forwardRef } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // Custom styles for the MDBadge\n\nimport MDBadgeRoot from \"components/MDBadge/MDBadgeRoot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MDBadge = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    color,\n    variant,\n    size,\n    circular,\n    indicator,\n    border,\n    container,\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MDBadgeRoot, { ...rest,\n    ownerState: {\n      color,\n      variant,\n      size,\n      circular,\n      indicator,\n      border,\n      container,\n      children\n    },\n    ref: ref,\n    color: \"default\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}); // Setting default values for the props of MDBadge\n\n_c2 = MDBadge;\nMDBadge.defaultProps = {\n  color: \"info\",\n  variant: \"gradient\",\n  size: \"sm\",\n  circular: false,\n  indicator: false,\n  border: false,\n  children: false,\n  container: false\n}; // Typechecking props of the MDBadge\n\nMDBadge.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\"]),\n  variant: PropTypes.oneOf([\"gradient\", \"contained\"]),\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\"]),\n  circular: PropTypes.bool,\n  indicator: PropTypes.bool,\n  border: PropTypes.bool,\n  children: PropTypes.node,\n  container: PropTypes.bool\n};\nexport default MDBadge;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDBadge$forwardRef\");\n$RefreshReg$(_c2, \"MDBadge\");","map":{"version":3,"sources":["/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/components/MDBadge/index.js"],"names":["forwardRef","PropTypes","MDBadgeRoot","MDBadge","ref","color","variant","size","circular","indicator","border","container","children","rest","defaultProps","propTypes","oneOf","bool","node"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,OAAO,gBAAGH,UAAU,MACxB,OAAsFI,GAAtF;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA,SAAlC;AAA6CC,IAAAA,MAA7C;AAAqDC,IAAAA,SAArD;AAAgEC,IAAAA,QAAhE;AAA0E,OAAGC;AAA7E,GAAD;AAAA,sBACE,QAAC,WAAD,OACMA,IADN;AAEE,IAAA,UAAU,EAAE;AAAER,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,IAAlB;AAAwBC,MAAAA,QAAxB;AAAkCC,MAAAA,SAAlC;AAA6CC,MAAAA,MAA7C;AAAqDC,MAAAA,SAArD;AAAgEC,MAAAA;AAAhE,KAFd;AAGE,IAAA,GAAG,EAAER,GAHP;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA,cAMGQ;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAAA,CADwB,CAA1B,C,CAaA;;MAbMT,O;AAcNA,OAAO,CAACW,YAAR,GAAuB;AACrBT,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,OAAO,EAAE,UAFY;AAGrBC,EAAAA,IAAI,EAAE,IAHe;AAIrBC,EAAAA,QAAQ,EAAE,KAJW;AAKrBC,EAAAA,SAAS,EAAE,KALU;AAMrBC,EAAAA,MAAM,EAAE,KANa;AAOrBE,EAAAA,QAAQ,EAAE,KAPW;AAQrBD,EAAAA,SAAS,EAAE;AARU,CAAvB,C,CAWA;;AACAR,OAAO,CAACY,SAAR,GAAoB;AAClBV,EAAAA,KAAK,EAAEJ,SAAS,CAACe,KAAV,CAAgB,CACrB,SADqB,EAErB,WAFqB,EAGrB,MAHqB,EAIrB,SAJqB,EAKrB,SALqB,EAMrB,OANqB,EAOrB,OAPqB,EAQrB,MARqB,CAAhB,CADW;AAWlBV,EAAAA,OAAO,EAAEL,SAAS,CAACe,KAAV,CAAgB,CAAC,UAAD,EAAa,WAAb,CAAhB,CAXS;AAYlBT,EAAAA,IAAI,EAAEN,SAAS,CAACe,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAhB,CAZY;AAalBR,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,IAbF;AAclBR,EAAAA,SAAS,EAAER,SAAS,CAACgB,IAdH;AAelBP,EAAAA,MAAM,EAAET,SAAS,CAACgB,IAfA;AAgBlBL,EAAAA,QAAQ,EAAEX,SAAS,CAACiB,IAhBF;AAiBlBP,EAAAA,SAAS,EAAEV,SAAS,CAACgB;AAjBH,CAApB;AAoBA,eAAed,OAAf","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for the MDBadge\nimport MDBadgeRoot from \"components/MDBadge/MDBadgeRoot\";\n\nconst MDBadge = forwardRef(\n  ({ color, variant, size, circular, indicator, border, container, children, ...rest }, ref) => (\n    <MDBadgeRoot\n      {...rest}\n      ownerState={{ color, variant, size, circular, indicator, border, container, children }}\n      ref={ref}\n      color=\"default\"\n    >\n      {children}\n    </MDBadgeRoot>\n  )\n);\n\n// Setting default values for the props of MDBadge\nMDBadge.defaultProps = {\n  color: \"info\",\n  variant: \"gradient\",\n  size: \"sm\",\n  circular: false,\n  indicator: false,\n  border: false,\n  children: false,\n  container: false,\n};\n\n// Typechecking props of the MDBadge\nMDBadge.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  variant: PropTypes.oneOf([\"gradient\", \"contained\"]),\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\"]),\n  circular: PropTypes.bool,\n  indicator: PropTypes.bool,\n  border: PropTypes.bool,\n  children: PropTypes.node,\n  container: PropTypes.bool,\n};\n\nexport default MDBadge;\n"]},"metadata":{},"sourceType":"module"}