{"ast":null,"code":"var _jsxFileName = \"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\src\\\\layouts\\\\tables\\\\data\\\\usersData.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\n// Soft UI Dashboard React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDAvatar from \"components/MDAvatar\";\nimport MDBadge from \"components/MDBadge\";\nimport MDButton from \"components/MDButton\"; // Images\n// import logoXD from \"assets/images/small-logos/logo-xd.svg\";\n// import logoAtlassian from \"assets/images/small-logos/logo-atlassian.svg\";\n// import logoSlack from \"assets/images/small-logos/logo-slack.svg\";\n// import logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\n// import logoJira from \"assets/images/small-logos/logo-jira.svg\";\n// import logoInvesion from \"assets/images/small-logos/logo-invision.svg\";\n\nimport team2 from \"assets/images/team-2.jpg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllUsers } from \"store/Actions\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { activateUser } from \"store/Actions\";\nimport { deactivateUser } from \"store/Actions\";\nimport { imageUrl } from \"configuration/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction usersData() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const userAuthReducer = useSelector(state => state === null || state === void 0 ? void 0 : state.userAuthReducer);\n  const accessToken = \"1|1LhlQ5V0qnkAogHuEG70UAYK2eiUBUU6HBfhicRu\";\n  const dispatch = useDispatch();\n\n  const Author = _ref => {\n    let {\n      image,\n      name,\n      email\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(MDBox, {\n      display: \"flex\",\n      alignItems: \"center\",\n      lineHeight: 1,\n      children: [/*#__PURE__*/_jsxDEV(MDAvatar, {\n        src: image,\n        name: name,\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        ml: 2,\n        lineHeight: 1,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          display: \"block\",\n          variant: \"button\",\n          fontWeight: \"medium\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"caption\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  };\n\n  const Job = _ref2 => {\n    let {\n      title,\n      description\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(MDBox, {\n      lineHeight: 1,\n      textAlign: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n        display: \"block\",\n        variant: \"caption\",\n        color: \"text\",\n        fontWeight: \"medium\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"caption\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  };\n\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, []);\n  useEffect(() => {\n    var _userAuthReducer$user;\n\n    if ((userAuthReducer === null || userAuthReducer === void 0 ? void 0 : (_userAuthReducer$user = userAuthReducer.users) === null || _userAuthReducer$user === void 0 ? void 0 : _userAuthReducer$user.length) > 0) {\n      setUsers(userAuthReducer === null || userAuthReducer === void 0 ? void 0 : userAuthReducer.users);\n    }\n  }, [userAuthReducer === null || userAuthReducer === void 0 ? void 0 : userAuthReducer.users]);\n  useEffect(() => {\n    console.log(users);\n  }, [users]);\n\n  const _onClickAction = ele => {\n    setIsLoading(true);\n\n    if ((ele === null || ele === void 0 ? void 0 : ele.status) == \"active\") {\n      dispatch(deactivateUser(accessToken, ele === null || ele === void 0 ? void 0 : ele.id)).then(() => {\n        dispatch(getAllUsers()).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n\n    if ((ele === null || ele === void 0 ? void 0 : ele.status) == \"inactive\") {\n      dispatch(activateUser(accessToken, ele === null || ele === void 0 ? void 0 : ele.id)).then(() => {\n        dispatch(getAllUsers()).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n  };\n\n  return {\n    columns: [{\n      Header: \"user\",\n      accessor: \"user\",\n      width: \"45%\",\n      align: \"left\"\n    }, {\n      Header: \"usertype\",\n      accessor: \"usertype\",\n      align: \"left\"\n    }, {\n      Header: \"status\",\n      accessor: \"status\",\n      align: \"center\"\n    }, {\n      Header: \"JOINED\",\n      accessor: \"JOINED\",\n      align: \"center\"\n    }, {\n      Header: \"action\",\n      accessor: \"action\",\n      align: \"center\"\n    }],\n    isLoading: isLoading,\n    rows: users === null || users === void 0 ? void 0 : users.map(ele => {\n      return {\n        user: /*#__PURE__*/_jsxDEV(Author, {\n          image: `${imageUrl}${ele === null || ele === void 0 ? void 0 : ele.profile_image}/${ele === null || ele === void 0 ? void 0 : ele.profile_image}`,\n          name: (ele === null || ele === void 0 ? void 0 : ele.name) || \"No Name\",\n          email: (ele === null || ele === void 0 ? void 0 : ele.email) || \"No E-mail Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this),\n        usertype: /*#__PURE__*/_jsxDEV(Job, {\n          title: (ele === null || ele === void 0 ? void 0 : ele.role_id) == 2 ? \"Client\" : \"Service Provider\",\n          description: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this),\n        status: /*#__PURE__*/_jsxDEV(MDBox, {\n          ml: -1,\n          children: /*#__PURE__*/_jsxDEV(MDBadge, {\n            badgeContent: (ele === null || ele === void 0 ? void 0 : ele.status) || \"No Status\",\n            color: (ele === null || ele === void 0 ? void 0 : ele.status) === \"active\" ? \"success\" : (ele === null || ele === void 0 ? void 0 : ele.status) === \"inactive\" || (ele === null || ele === void 0 ? void 0 : ele.status) === \"block\" ? \"dark\" : \"dark\",\n            variant: \"gradient\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this),\n        JOINED: /*#__PURE__*/_jsxDEV(MDTypography, {\n          component: \"a\",\n          href: \"#\",\n          variant: \"caption\",\n          color: \"text\",\n          fontWeight: \"medium\",\n          children: moment(ele.created_at).format(\"DD-MMM-YYYY hh:mm:s A\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this),\n        action: isLoading ? /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          fontWeight: \"regular\",\n          display: \"block\",\n          color: \"info\",\n          fontWeight: \"medium\",\n          textGradient: true,\n          children: \"Please Wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(MDBox, {\n          onClick: () => {\n            setIsLoading(true);\n\n            _onClickAction(ele);\n          },\n          children: /*#__PURE__*/_jsxDEV(MDButton, {\n            variant: \"gradient\",\n            color: \"secondary\",\n            children: (ele === null || ele === void 0 ? void 0 : ele.status) === \"active\" ? \"Deactivate Now\" : \"Activate Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      };\n    })\n  };\n}\n\n_s(usersData, \"KQXpnXaV1da5p25uI9WQWKSX3cs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport default usersData;","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/layouts/tables/data/usersData.js"],"names":["MDBox","MDTypography","MDAvatar","MDBadge","MDButton","team2","useDispatch","useSelector","getAllUsers","useEffect","useState","moment","activateUser","deactivateUser","imageUrl","usersData","isLoading","setIsLoading","users","setUsers","userAuthReducer","state","accessToken","dispatch","Author","image","name","email","Job","title","description","length","console","log","_onClickAction","ele","status","id","then","columns","Header","accessor","width","align","rows","map","user","profile_image","usertype","role_id","JOINED","created_at","format","action"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n\n// Soft UI Dashboard React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDAvatar from \"components/MDAvatar\";\nimport MDBadge from \"components/MDBadge\";\nimport MDButton from \"components/MDButton\";\n\n// Images\n// import logoXD from \"assets/images/small-logos/logo-xd.svg\";\n// import logoAtlassian from \"assets/images/small-logos/logo-atlassian.svg\";\n// import logoSlack from \"assets/images/small-logos/logo-slack.svg\";\n// import logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\n// import logoJira from \"assets/images/small-logos/logo-jira.svg\";\n// import logoInvesion from \"assets/images/small-logos/logo-invision.svg\";\nimport team2 from \"assets/images/team-2.jpg\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllUsers } from \"store/Actions\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { activateUser } from \"store/Actions\";\nimport { deactivateUser } from \"store/Actions\";\nimport { imageUrl } from \"configuration/config\";\n\nfunction usersData() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const userAuthReducer = useSelector((state) => state?.userAuthReducer);\n  const accessToken = \"1|1LhlQ5V0qnkAogHuEG70UAYK2eiUBUU6HBfhicRu\";\n  const dispatch = useDispatch();\n\n  const Author = ({ image, name, email }) => (\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\n      <MDAvatar src={image} name={name} size=\"sm\" />\n      <MDBox ml={2} lineHeight={1}>\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\n          {name}\n        </MDTypography>\n        <MDTypography variant=\"caption\">{email}</MDTypography>\n      </MDBox>\n    </MDBox>\n  );\n\n  const Job = ({ title, description }) => (\n    <MDBox lineHeight={1} textAlign=\"left\">\n      <MDTypography\n        display=\"block\"\n        variant=\"caption\"\n        color=\"text\"\n        fontWeight=\"medium\"\n      >\n        {title}\n      </MDTypography>\n      <MDTypography variant=\"caption\">{description}</MDTypography>\n    </MDBox>\n  );\n\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, []);\n\n  useEffect(() => {\n    if (userAuthReducer?.users?.length > 0) {\n      setUsers(userAuthReducer?.users);\n    }\n  }, [userAuthReducer?.users]);\n\n  useEffect(() => {\n    console.log(users);\n  }, [users]);\n\n  const _onClickAction = (ele) => {\n    setIsLoading(true);\n\n    if (ele?.status == \"active\") {\n      dispatch(deactivateUser(accessToken, ele?.id)).then(() => {\n        dispatch(getAllUsers()).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n    if (ele?.status == \"inactive\") {\n      dispatch(activateUser(accessToken, ele?.id)).then(() => {\n        dispatch(getAllUsers()).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n  };\n  return {\n    columns: [\n      { Header: \"user\", accessor: \"user\", width: \"45%\", align: \"left\" },\n      { Header: \"usertype\", accessor: \"usertype\", align: \"left\" },\n      { Header: \"status\", accessor: \"status\", align: \"center\" },\n      { Header: \"JOINED\", accessor: \"JOINED\", align: \"center\" },\n      { Header: \"action\", accessor: \"action\", align: \"center\" },\n    ],\n    isLoading: isLoading,\n    rows: users?.map((ele) => {\n      return {\n        user: (\n          <Author\n            image={`${imageUrl}${ele?.profile_image}/${ele?.profile_image}`}\n            name={ele?.name || \"No Name\"}\n            email={ele?.email || \"No E-mail Address\"}\n          />\n        ),\n        usertype: (\n          <Job\n            title={ele?.role_id == 2 ? \"Client\" : \"Service Provider\"}\n            description=\"\"\n          />\n        ),\n        status: (\n          <MDBox ml={-1}>\n            <MDBadge\n              badgeContent={ele?.status || \"No Status\"}\n              color={\n                ele?.status === \"active\"\n                  ? \"success\"\n                  : ele?.status === \"inactive\" || ele?.status === \"block\"\n                  ? \"dark\"\n                  : \"dark\"\n              }\n              variant=\"gradient\"\n              size=\"sm\"\n            />\n          </MDBox>\n        ),\n        JOINED: (\n          <MDTypography\n            component=\"a\"\n            href=\"#\"\n            variant=\"caption\"\n            color=\"text\"\n            fontWeight=\"medium\"\n          >\n            {moment(ele.created_at).format(\"DD-MMM-YYYY hh:mm:s A\")}\n          </MDTypography>\n        ),\n        action: isLoading ? (\n          <MDTypography\n            variant=\"button\"\n            fontWeight=\"regular\"\n            display=\"block\"\n            color=\"info\"\n            fontWeight=\"medium\"\n            textGradient\n          >\n            Please Wait\n          </MDTypography>\n        ) : (\n          <MDBox\n            onClick={() => {\n              setIsLoading(true);\n              _onClickAction(ele);\n            }}\n          >\n            <MDButton variant=\"gradient\" color=\"secondary\">\n              {ele?.status === \"active\" ? \"Deactivate Now\" : \"Activate Now\"}\n            </MDButton>\n          </MDBox>\n        ),\n      };\n    }),\n  };\n}\n\nexport default usersData;\n"]},"metadata":{},"sourceType":"module"}