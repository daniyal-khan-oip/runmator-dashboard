{"ast":null,"code":"var _jsxFileName = \"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\src\\\\components\\\\MDTypography\\\\index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { forwardRef } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // Custom styles for MDTypography\n\nimport MDTypographyRoot from \"components/MDTypography/MDTypographyRoot\"; // Material Dashboard 2 React contexts\n\nimport { useMaterialUIController } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MDTypography = /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    color,\n    fontWeight,\n    textTransform,\n    verticalAlign,\n    textGradient,\n    opacity,\n    children,\n    ...rest\n  } = _ref;\n  const [controller] = useMaterialUIController();\n  const {\n    darkMode\n  } = controller;\n  return /*#__PURE__*/_jsxDEV(MDTypographyRoot, { ...rest,\n    ref: ref,\n    ownerState: {\n      color,\n      textTransform,\n      verticalAlign,\n      fontWeight,\n      opacity,\n      textGradient,\n      darkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}, \"s0n8bwZXGOuz7un3Pl1FvVzqqsQ=\", false, function () {\n  return [useMaterialUIController];\n})); // Setting default values for the props of MDTypography\n\n_c2 = MDTypography;\nMDTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1\n}; // Typechecking props for the MDTypography\n\nMDTypography.propTypes = {\n  color: PropTypes.oneOf([\"inherit\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"text\", \"white\"]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\"unset\", \"baseline\", \"sub\", \"super\", \"text-top\", \"text-bottom\", \"middle\", \"top\", \"bottom\"]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number\n};\nexport default MDTypography;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDTypography$forwardRef\");\n$RefreshReg$(_c2, \"MDTypography\");","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/components/MDTypography/index.js"],"names":["forwardRef","PropTypes","MDTypographyRoot","useMaterialUIController","MDTypography","ref","color","fontWeight","textTransform","verticalAlign","textGradient","opacity","children","rest","controller","darkMode","defaultProps","propTypes","oneOf","bool","node","isRequired","number"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,0CAA7B,C,CAEA;;AACA,SAASC,uBAAT,QAAwC,SAAxC;;AAEA,MAAMC,YAAY,gBAAGJ,UAAU,SAC7B,OAEEK,GAFF,KAGK;AAAA;;AAAA,MAFH;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,aAArB;AAAoCC,IAAAA,aAApC;AAAmDC,IAAAA,YAAnD;AAAiEC,IAAAA,OAAjE;AAA0EC,IAAAA,QAA1E;AAAoF,OAAGC;AAAvF,GAEG;AACH,QAAM,CAACC,UAAD,IAAeX,uBAAuB,EAA5C;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAeD,UAArB;AAEA,sBACE,QAAC,gBAAD,OACMD,IADN;AAEE,IAAA,GAAG,EAAER,GAFP;AAGE,IAAA,UAAU,EAAE;AACVC,MAAAA,KADU;AAEVE,MAAAA,aAFU;AAGVC,MAAAA,aAHU;AAIVF,MAAAA,UAJU;AAKVI,MAAAA,OALU;AAMVD,MAAAA,YANU;AAOVK,MAAAA;AAPU,KAHd;AAAA,cAaGH;AAbH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzB4B;AAAA,UAKNT,uBALM;AAAA,GAA/B,C,CA4BA;;MA5BMC,Y;AA6BNA,YAAY,CAACY,YAAb,GAA4B;AAC1BV,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,UAAU,EAAE,KAFc;AAG1BC,EAAAA,aAAa,EAAE,MAHW;AAI1BC,EAAAA,aAAa,EAAE,OAJW;AAK1BC,EAAAA,YAAY,EAAE,KALY;AAM1BC,EAAAA,OAAO,EAAE;AANiB,CAA5B,C,CASA;;AACAP,YAAY,CAACa,SAAb,GAAyB;AACvBX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,KAAV,CAAgB,CACrB,SADqB,EAErB,SAFqB,EAGrB,WAHqB,EAIrB,MAJqB,EAKrB,SALqB,EAMrB,SANqB,EAOrB,OAPqB,EAQrB,OARqB,EASrB,MATqB,EAUrB,MAVqB,EAWrB,OAXqB,CAAhB,CADgB;AAcvBX,EAAAA,UAAU,EAAEN,SAAS,CAACiB,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB,EAA4B,QAA5B,EAAsC,MAAtC,CAAhB,CAdW;AAevBV,EAAAA,aAAa,EAAEP,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,YAAT,EAAuB,WAAvB,EAAoC,WAApC,CAAhB,CAfQ;AAgBvBT,EAAAA,aAAa,EAAER,SAAS,CAACiB,KAAV,CAAgB,CAC7B,OAD6B,EAE7B,UAF6B,EAG7B,KAH6B,EAI7B,OAJ6B,EAK7B,UAL6B,EAM7B,aAN6B,EAO7B,QAP6B,EAQ7B,KAR6B,EAS7B,QAT6B,CAAhB,CAhBQ;AA2BvBR,EAAAA,YAAY,EAAET,SAAS,CAACkB,IA3BD;AA4BvBP,EAAAA,QAAQ,EAAEX,SAAS,CAACmB,IAAV,CAAeC,UA5BF;AA6BvBV,EAAAA,OAAO,EAAEV,SAAS,CAACqB;AA7BI,CAAzB;AAgCA,eAAelB,YAAf","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDTypography\nimport MDTypographyRoot from \"components/MDTypography/MDTypographyRoot\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nconst MDTypography = forwardRef(\n  (\n    { color, fontWeight, textTransform, verticalAlign, textGradient, opacity, children, ...rest },\n    ref\n  ) => {\n    const [controller] = useMaterialUIController();\n    const { darkMode } = controller;\n\n    return (\n      <MDTypographyRoot\n        {...rest}\n        ref={ref}\n        ownerState={{\n          color,\n          textTransform,\n          verticalAlign,\n          fontWeight,\n          opacity,\n          textGradient,\n          darkMode,\n        }}\n      >\n        {children}\n      </MDTypographyRoot>\n    );\n  }\n);\n\n// Setting default values for the props of MDTypography\nMDTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1,\n};\n\n// Typechecking props for the MDTypography\nMDTypography.propTypes = {\n  color: PropTypes.oneOf([\n    \"inherit\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n    \"white\",\n  ]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\n    \"unset\",\n    \"baseline\",\n    \"sub\",\n    \"super\",\n    \"text-top\",\n    \"text-bottom\",\n    \"middle\",\n    \"top\",\n    \"bottom\",\n  ]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number,\n};\n\nexport default MDTypography;\n"]},"metadata":{},"sourceType":"module"}