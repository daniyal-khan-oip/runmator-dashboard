{"ast":null,"code":"var _jsxFileName = \"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\src\\\\examples\\\\Cards\\\\ProjectCards\\\\DefaultProjectCard\\\\index.js\";\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// react-router-dom components\nimport { Link } from \"react-router-dom\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Tooltip from \"@mui/material/Tooltip\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\nimport MDAvatar from \"components/MDAvatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DefaultProjectCard(_ref) {\n  let {\n    image,\n    label,\n    title,\n    description,\n    action,\n    authors\n  } = _ref;\n  const renderAuthors = authors.map(_ref2 => {\n    let {\n      image: media,\n      name\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: name,\n      placement: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(MDAvatar, {\n        src: media,\n        alt: name,\n        size: \"xs\",\n        sx: _ref3 => {\n          let {\n            borders: {\n              borderWidth\n            },\n            palette: {\n              white\n            }\n          } = _ref3;\n          return {\n            border: `${borderWidth[2]} solid ${white.main}`,\n            cursor: \"pointer\",\n            position: \"relative\",\n            ml: -1.25,\n            \"&:hover, &:focus\": {\n              zIndex: \"10\"\n            }\n          };\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: \"transparent\",\n      boxShadow: \"none\",\n      overflow: \"visible\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      position: \"relative\",\n      width: \"100.25%\",\n      shadow: \"xl\",\n      borderRadius: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        src: image,\n        component: \"img\",\n        title: title,\n        sx: {\n          maxWidth: \"100%\",\n          margin: 0,\n          boxShadow: _ref4 => {\n            let {\n              boxShadows: {\n                md\n              }\n            } = _ref4;\n            return md;\n          },\n          objectFit: \"cover\",\n          objectPosition: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      mt: 1,\n      mx: 0.5,\n      children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"button\",\n        fontWeight: \"regular\",\n        color: \"text\",\n        textTransform: \"capitalize\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        mb: 1,\n        children: action.type === \"internal\" ? /*#__PURE__*/_jsxDEV(MDTypography, {\n          component: Link,\n          to: action.route,\n          variant: \"h5\",\n          textTransform: \"capitalize\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MDTypography, {\n          component: \"a\",\n          href: action.route,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          variant: \"h5\",\n          textTransform: \"capitalize\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        mb: 3,\n        lineHeight: 0,\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          fontWeight: \"light\",\n          color: \"text\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [action.type === \"internal\" ? /*#__PURE__*/_jsxDEV(MDButton, {\n          component: Link,\n          to: action.route,\n          variant: \"outlined\",\n          size: \"small\",\n          color: action.color,\n          children: action.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MDButton, {\n          component: \"a\",\n          href: action.route,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          variant: \"outlined\",\n          size: \"small\",\n          color: action.color,\n          children: action.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          display: \"flex\",\n          children: renderAuthors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of DefaultProjectCard\n\n\n_c = DefaultProjectCard;\nDefaultProjectCard.defaultProps = {\n  authors: []\n}; // Typechecking props for the DefaultProjectCard\n\nDefaultProjectCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  action: PropTypes.shape({\n    type: PropTypes.oneOf([\"external\", \"internal\"]),\n    route: PropTypes.string.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"white\"]).isRequired,\n    label: PropTypes.string.isRequired\n  }).isRequired,\n  authors: PropTypes.arrayOf(PropTypes.object)\n};\nexport default DefaultProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultProjectCard\");","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/examples/Cards/ProjectCards/DefaultProjectCard/index.js"],"names":["Link","PropTypes","Card","CardMedia","Tooltip","MDBox","MDTypography","MDButton","MDAvatar","DefaultProjectCard","image","label","title","description","action","authors","renderAuthors","map","media","name","borders","borderWidth","palette","white","border","main","cursor","position","ml","zIndex","display","flexDirection","backgroundColor","boxShadow","overflow","maxWidth","margin","boxShadows","md","objectFit","objectPosition","type","route","color","defaultProps","propTypes","string","isRequired","shape","oneOf","arrayOf","object"],"mappings":"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","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// react-router-dom components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\nimport MDAvatar from \"components/MDAvatar\";\n\nfunction DefaultProjectCard({ image, label, title, description, action, authors }) {\n  const renderAuthors = authors.map(({ image: media, name }) => (\n    <Tooltip key={name} title={name} placement=\"bottom\">\n      <MDAvatar\n        src={media}\n        alt={name}\n        size=\"xs\"\n        sx={({ borders: { borderWidth }, palette: { white } }) => ({\n          border: `${borderWidth[2]} solid ${white.main}`,\n          cursor: \"pointer\",\n          position: \"relative\",\n          ml: -1.25,\n\n          \"&:hover, &:focus\": {\n            zIndex: \"10\",\n          },\n        })}\n      />\n    </Tooltip>\n  ));\n\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: \"transparent\",\n        boxShadow: \"none\",\n        overflow: \"visible\",\n      }}\n    >\n      <MDBox position=\"relative\" width=\"100.25%\" shadow=\"xl\" borderRadius=\"xl\">\n        <CardMedia\n          src={image}\n          component=\"img\"\n          title={title}\n          sx={{\n            maxWidth: \"100%\",\n            margin: 0,\n            boxShadow: ({ boxShadows: { md } }) => md,\n            objectFit: \"cover\",\n            objectPosition: \"center\",\n          }}\n        />\n      </MDBox>\n      <MDBox mt={1} mx={0.5}>\n        <MDTypography variant=\"button\" fontWeight=\"regular\" color=\"text\" textTransform=\"capitalize\">\n          {label}\n        </MDTypography>\n        <MDBox mb={1}>\n          {action.type === \"internal\" ? (\n            <MDTypography\n              component={Link}\n              to={action.route}\n              variant=\"h5\"\n              textTransform=\"capitalize\"\n            >\n              {title}\n            </MDTypography>\n          ) : (\n            <MDTypography\n              component=\"a\"\n              href={action.route}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"h5\"\n              textTransform=\"capitalize\"\n            >\n              {title}\n            </MDTypography>\n          )}\n        </MDBox>\n        <MDBox mb={3} lineHeight={0}>\n          <MDTypography variant=\"button\" fontWeight=\"light\" color=\"text\">\n            {description}\n          </MDTypography>\n        </MDBox>\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          {action.type === \"internal\" ? (\n            <MDButton\n              component={Link}\n              to={action.route}\n              variant=\"outlined\"\n              size=\"small\"\n              color={action.color}\n            >\n              {action.label}\n            </MDButton>\n          ) : (\n            <MDButton\n              component=\"a\"\n              href={action.route}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              variant=\"outlined\"\n              size=\"small\"\n              color={action.color}\n            >\n              {action.label}\n            </MDButton>\n          )}\n          <MDBox display=\"flex\">{renderAuthors}</MDBox>\n        </MDBox>\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of DefaultProjectCard\nDefaultProjectCard.defaultProps = {\n  authors: [],\n};\n\n// Typechecking props for the DefaultProjectCard\nDefaultProjectCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  action: PropTypes.shape({\n    type: PropTypes.oneOf([\"external\", \"internal\"]),\n    route: PropTypes.string.isRequired,\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"light\",\n      \"dark\",\n      \"white\",\n    ]).isRequired,\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n  authors: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default DefaultProjectCard;\n"]},"metadata":{},"sourceType":"module"}