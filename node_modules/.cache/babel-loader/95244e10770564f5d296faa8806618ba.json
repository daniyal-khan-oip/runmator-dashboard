{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Cards/InfoCards/ProfileInfoCard/index.js\";\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// react-routers components\nimport { Link } from \"react-router-dom\"; // prop-types is library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Icon from \"@mui/material/Icon\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\"; // Material Dashboard 2 PRO React base styles\n\nimport colors from \"assets/theme/base/colors\";\nimport typography from \"assets/theme/base/typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileInfoCard(_ref) {\n  let {\n    title,\n    description,\n    info,\n    social,\n    action,\n    shadow\n  } = _ref;\n  const labels = [];\n  const values = [];\n  const {\n    socialMediaColors\n  } = colors;\n  const {\n    size\n  } = typography; // Convert this form `objectKey` of the object key in to this `object key`\n\n  Object.keys(info).forEach(el => {\n    if (el.match(/[A-Z\\s]+/)) {\n      const uppercaseLetter = Array.from(el).find(i => i.match(/[A-Z]+/));\n      const newElement = el.replace(uppercaseLetter, ` ${uppercaseLetter.toLowerCase()}`);\n      labels.push(newElement);\n    } else {\n      labels.push(el);\n    }\n  }); // Push the object values into the values array\n\n  Object.values(info).forEach(el => values.push(el)); // Render the card info items\n\n  const renderItems = labels.map((label, key) => /*#__PURE__*/_jsxDEV(MDBox, {\n    display: \"flex\",\n    py: 1,\n    pr: 2,\n    children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"button\",\n      fontWeight: \"bold\",\n      textTransform: \"capitalize\",\n      children: [label, \": \\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n      variant: \"button\",\n      fontWeight: \"regular\",\n      color: \"text\",\n      children: [\"\\xA0\", values[key]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, label, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this)); // Render the card social media icons\n\n  const renderSocial = social.map(_ref2 => {\n    let {\n      link,\n      icon,\n      color\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(MDBox, {\n      component: \"a\",\n      href: link,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      fontSize: size.lg,\n      color: socialMediaColors[color].main,\n      pr: 1,\n      pl: 0.5,\n      lineHeight: 1,\n      children: icon\n    }, color, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: \"100%\",\n      boxShadow: !shadow && \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      pt: 2,\n      px: 2,\n      children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"h6\",\n        fontWeight: \"medium\",\n        textTransform: \"capitalize\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n        component: Link,\n        to: action.route,\n        variant: \"body2\",\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: action.tooltip,\n          placement: \"top\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        mb: 2,\n        lineHeight: 1,\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          color: \"text\",\n          fontWeight: \"light\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        opacity: 0.3,\n        children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        children: [renderItems, /*#__PURE__*/_jsxDEV(MDBox, {\n          display: \"flex\",\n          py: 1,\n          pr: 2,\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"button\",\n            fontWeight: \"bold\",\n            textTransform: \"capitalize\",\n            children: \"social: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), renderSocial]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n} // Setting default props for the ProfileInfoCard\n\n\n_c = ProfileInfoCard;\nProfileInfoCard.defaultProps = {\n  shadow: true\n}; // Typechecking props for the ProfileInfoCard\n\nProfileInfoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  info: PropTypes.objectOf(PropTypes.string).isRequired,\n  social: PropTypes.arrayOf(PropTypes.object).isRequired,\n  action: PropTypes.shape({\n    route: PropTypes.string.isRequired,\n    tooltip: PropTypes.string.isRequired\n  }).isRequired,\n  shadow: PropTypes.bool\n};\nexport default ProfileInfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfoCard\");","map":{"version":3,"sources":["/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Cards/InfoCards/ProfileInfoCard/index.js"],"names":["Link","PropTypes","Card","Divider","Tooltip","Icon","MDBox","MDTypography","colors","typography","ProfileInfoCard","title","description","info","social","action","shadow","labels","values","socialMediaColors","size","Object","keys","forEach","el","match","uppercaseLetter","Array","from","find","i","newElement","replace","toLowerCase","push","renderItems","map","label","key","renderSocial","link","icon","color","lg","main","height","boxShadow","route","tooltip","defaultProps","propTypes","string","isRequired","objectOf","arrayOf","object","shape","bool"],"mappings":"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","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// react-routers components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// Material Dashboard 2 PRO React base styles\nimport colors from \"assets/theme/base/colors\";\nimport typography from \"assets/theme/base/typography\";\n\nfunction ProfileInfoCard({ title, description, info, social, action, shadow }) {\n  const labels = [];\n  const values = [];\n  const { socialMediaColors } = colors;\n  const { size } = typography;\n\n  // Convert this form `objectKey` of the object key in to this `object key`\n  Object.keys(info).forEach((el) => {\n    if (el.match(/[A-Z\\s]+/)) {\n      const uppercaseLetter = Array.from(el).find((i) => i.match(/[A-Z]+/));\n      const newElement = el.replace(uppercaseLetter, ` ${uppercaseLetter.toLowerCase()}`);\n\n      labels.push(newElement);\n    } else {\n      labels.push(el);\n    }\n  });\n\n  // Push the object values into the values array\n  Object.values(info).forEach((el) => values.push(el));\n\n  // Render the card info items\n  const renderItems = labels.map((label, key) => (\n    <MDBox key={label} display=\"flex\" py={1} pr={2}>\n      <MDTypography variant=\"button\" fontWeight=\"bold\" textTransform=\"capitalize\">\n        {label}: &nbsp;\n      </MDTypography>\n      <MDTypography variant=\"button\" fontWeight=\"regular\" color=\"text\">\n        &nbsp;{values[key]}\n      </MDTypography>\n    </MDBox>\n  ));\n\n  // Render the card social media icons\n  const renderSocial = social.map(({ link, icon, color }) => (\n    <MDBox\n      key={color}\n      component=\"a\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      fontSize={size.lg}\n      color={socialMediaColors[color].main}\n      pr={1}\n      pl={0.5}\n      lineHeight={1}\n    >\n      {icon}\n    </MDBox>\n  ));\n\n  return (\n    <Card sx={{ height: \"100%\", boxShadow: !shadow && \"none\" }}>\n      <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={2} px={2}>\n        <MDTypography variant=\"h6\" fontWeight=\"medium\" textTransform=\"capitalize\">\n          {title}\n        </MDTypography>\n        <MDTypography component={Link} to={action.route} variant=\"body2\" color=\"secondary\">\n          <Tooltip title={action.tooltip} placement=\"top\">\n            <Icon>edit</Icon>\n          </Tooltip>\n        </MDTypography>\n      </MDBox>\n      <MDBox p={2}>\n        <MDBox mb={2} lineHeight={1}>\n          <MDTypography variant=\"button\" color=\"text\" fontWeight=\"light\">\n            {description}\n          </MDTypography>\n        </MDBox>\n        <MDBox opacity={0.3}>\n          <Divider />\n        </MDBox>\n        <MDBox>\n          {renderItems}\n          <MDBox display=\"flex\" py={1} pr={2}>\n            <MDTypography variant=\"button\" fontWeight=\"bold\" textTransform=\"capitalize\">\n              social: &nbsp;\n            </MDTypography>\n            {renderSocial}\n          </MDBox>\n        </MDBox>\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default props for the ProfileInfoCard\nProfileInfoCard.defaultProps = {\n  shadow: true,\n};\n\n// Typechecking props for the ProfileInfoCard\nProfileInfoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  info: PropTypes.objectOf(PropTypes.string).isRequired,\n  social: PropTypes.arrayOf(PropTypes.object).isRequired,\n  action: PropTypes.shape({\n    route: PropTypes.string.isRequired,\n    tooltip: PropTypes.string.isRequired,\n  }).isRequired,\n  shadow: PropTypes.bool,\n};\n\nexport default ProfileInfoCard;\n"]},"metadata":{},"sourceType":"module"}