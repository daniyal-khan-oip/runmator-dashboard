{"ast":null,"code":"import axios from \"axios\";\nimport * as types from \"./actionType\";\nexport const AuthLoginAction = (email, password) => async dispatch => {\n  try {\n    const response = await axios.post(`https://online-books-app.herokuapp.com/api/users/login`, {\n      email: email,\n      password: password\n    });\n    console.log(response.data.user.token);\n\n    if (response.data.success) {\n      localStorage.setItem(\"token\", response.data.user.token);\n      dispatch({\n        type: types.AUTH_LOGGED_IN,\n        payload: {\n          token: response.data.user.token,\n          userData: response.data.user\n        }\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: types.AUTH_LOGGED_IN_ERROR,\n      payload: response.data\n    });\n    console.log(e);\n  }\n};\nexport const AuthLogoutAction = () => async dispatch => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: types.AUTH_LOGGED_OUT,\n    payload: {\n      token: \"\",\n      userData: \"\"\n    }\n  });\n};","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/store/Actions/index.js"],"names":["axios","types","AuthLoginAction","email","password","dispatch","response","post","console","log","data","user","token","success","localStorage","setItem","type","AUTH_LOGGED_IN","payload","userData","e","AUTH_LOGGED_IN_ERROR","AuthLogoutAction","removeItem","AUTH_LOGGED_OUT"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACtE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CACpB,wDADoB,EAErB;AACEJ,MAAAA,KAAK,EAAEA,KADT;AAEEC,MAAAA,QAAQ,EAAEA;AAFZ,KAFqB,CAAvB;AAOAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBC,KAA/B;;AACA,QAAIN,QAAQ,CAACI,IAAT,CAAcG,OAAlB,EAA2B;AACzBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BT,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBC,KAAjD;AACAP,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEf,KAAK,CAACgB,cADL;AAEPC,QAAAA,OAAO,EAAE;AACPN,UAAAA,KAAK,EAAEN,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBC,KADnB;AAEPO,UAAAA,QAAQ,EAAEb,QAAQ,CAACI,IAAT,CAAcC;AAFjB;AAFF,OAAD,CAAR;AAOD;AACF,GAnBD,CAmBE,OAAOS,CAAP,EAAU;AACVf,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEf,KAAK,CAACoB,oBADL;AAEPH,MAAAA,OAAO,EAAEZ,QAAQ,CAACI;AAFX,KAAD,CAAR;AAIAF,IAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACD;AACF,CA3BM;AA6BP,OAAO,MAAME,gBAAgB,GAAG,MAAM,MAAOjB,QAAP,IAAoB;AACxDS,EAAAA,YAAY,CAACS,UAAb,CAAwB,OAAxB;AACAlB,EAAAA,QAAQ,CAAC;AACPW,IAAAA,IAAI,EAAEf,KAAK,CAACuB,eADL;AAEPN,IAAAA,OAAO,EAAE;AACPN,MAAAA,KAAK,EAAE,EADA;AAEPO,MAAAA,QAAQ,EAAE;AAFH;AAFF,GAAD,CAAR;AAOD,CATM","sourcesContent":["import axios from \"axios\";\nimport * as types from \"./actionType\";\n\nexport const AuthLoginAction = (email, password) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `https://online-books-app.herokuapp.com/api/users/login`,\n      {\n        email: email,\n        password: password,\n      }\n    );\n    console.log(response.data.user.token);\n    if (response.data.success) {\n      localStorage.setItem(\"token\", response.data.user.token);\n      dispatch({\n        type: types.AUTH_LOGGED_IN,\n        payload: {\n          token: response.data.user.token,\n          userData: response.data.user,\n        },\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: types.AUTH_LOGGED_IN_ERROR,\n      payload: response.data,\n    });\n    console.log(e);\n  }\n};\n\nexport const AuthLogoutAction = () => async (dispatch) => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: types.AUTH_LOGGED_OUT,\n    payload: {\n      token: \"\",\n      userData: \"\",\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}