{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Navbars/DefaultNavbar/index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useState, useEffect } from \"react\"; // react-router components\n\nimport { Link } from \"react-router-dom\"; // prop-types is a library for typechecking of props.\n\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Container from \"@mui/material/Container\";\nimport Icon from \"@mui/material/Icon\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\"; // Material Dashboard 2 React example components\n\nimport DefaultNavbarLink from \"examples/Navbars/DefaultNavbar/DefaultNavbarLink\";\nimport DefaultNavbarMobile from \"examples/Navbars/DefaultNavbar/DefaultNavbarMobile\"; // Material Dashboard 2 PRO React base styles\n\nimport breakpoints from \"assets/theme/base/breakpoints\"; // Material Dashboard 2 PRO React context\n\nimport { useMaterialUIController } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DefaultNavbar(_ref) {\n  _s();\n\n  let {\n    transparent,\n    light,\n    action\n  } = _ref;\n  const [controller] = useMaterialUIController();\n  const {\n    darkMode\n  } = controller;\n  const [mobileNavbar, setMobileNavbar] = useState(false);\n  const [mobileView, setMobileView] = useState(false);\n\n  const openMobileNavbar = _ref2 => {\n    let {\n      currentTarget\n    } = _ref2;\n    return setMobileNavbar(currentTarget.parentNode);\n  };\n\n  const closeMobileNavbar = () => setMobileNavbar(false);\n\n  useEffect(() => {\n    // A function that sets the display state for the DefaultNavbarMobile.\n    function displayMobileNavbar() {\n      if (window.innerWidth < breakpoints.values.lg) {\n        setMobileView(true);\n        setMobileNavbar(false);\n      } else {\n        setMobileView(false);\n        setMobileNavbar(false);\n      }\n    }\n    /** \n     The event listener that's calling the displayMobileNavbar function when \n     resizing the window.\n    */\n\n\n    window.addEventListener(\"resize\", displayMobileNavbar); // Call the displayMobileNavbar function to set the state with the initial value.\n\n    displayMobileNavbar(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", displayMobileNavbar);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      py: 1,\n      px: {\n        xs: 4,\n        sm: transparent ? 2 : 3,\n        lg: transparent ? 0 : 2\n      },\n      my: 3,\n      mx: 3,\n      width: \"calc(100% - 48px)\",\n      borderRadius: \"lg\",\n      shadow: transparent ? \"none\" : \"md\",\n      color: light ? \"white\" : \"dark\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      position: \"absolute\",\n      left: 0,\n      zIndex: 3,\n      sx: _ref3 => {\n        let {\n          palette: {\n            transparent: transparentColor,\n            white,\n            background\n          },\n          functions: {\n            rgba\n          }\n        } = _ref3;\n        return {\n          backgroundColor: transparent ? transparentColor.main : rgba(darkMode ? background.sidenav : white.main, 0.8),\n          backdropFilter: transparent ? \"none\" : `saturate(200%) blur(30px)`\n        };\n      },\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        component: Link,\n        to: \"/\",\n        py: transparent ? 1.5 : 0.75,\n        lineHeight: 1,\n        pl: {\n          xs: 0,\n          lg: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          fontWeight: \"bold\",\n          color: light ? \"white\" : \"dark\",\n          children: \"Material Dashboard 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        color: \"inherit\",\n        display: {\n          xs: \"none\",\n          lg: \"flex\"\n        },\n        m: 0,\n        p: 0,\n        children: [/*#__PURE__*/_jsxDEV(DefaultNavbarLink, {\n          icon: \"donut_large\",\n          name: \"dashboard\",\n          route: \"/dashboard\",\n          light: light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DefaultNavbarLink, {\n          icon: \"person\",\n          name: \"profile\",\n          route: \"/profile\",\n          light: light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DefaultNavbarLink, {\n          icon: \"account_circle\",\n          name: \"sign up\",\n          route: \"/authentication/sign-up\",\n          light: light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DefaultNavbarLink, {\n          icon: \"key\",\n          name: \"sign in\",\n          route: \"/authentication/sign-in\",\n          light: light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), action && (action.type === \"internal\" ? /*#__PURE__*/_jsxDEV(MDBox, {\n        display: {\n          xs: \"none\",\n          lg: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MDButton, {\n          component: Link,\n          to: action.route,\n          variant: \"gradient\",\n          color: action.color ? action.color : \"info\",\n          size: \"small\",\n          children: action.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(MDBox, {\n        display: {\n          xs: \"none\",\n          lg: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MDButton, {\n          component: \"a\",\n          href: action.route,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          variant: \"gradient\",\n          color: action.color ? action.color : \"info\",\n          size: \"small\",\n          sx: {\n            mt: -0.3\n          },\n          children: action.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(MDBox, {\n        display: {\n          xs: \"inline-block\",\n          lg: \"none\"\n        },\n        lineHeight: 0,\n        py: 1.5,\n        pl: 1.5,\n        color: \"inherit\",\n        sx: {\n          cursor: \"pointer\"\n        },\n        onClick: openMobileNavbar,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          fontSize: \"default\",\n          children: mobileNavbar ? \"close\" : \"menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), mobileView && /*#__PURE__*/_jsxDEV(DefaultNavbarMobile, {\n      open: mobileNavbar,\n      close: closeMobileNavbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of DefaultNavbar\n\n\n_s(DefaultNavbar, \"y7ry/i5m/6g1ebFxTHEG4sxs1Vo=\", false, function () {\n  return [useMaterialUIController];\n});\n\n_c = DefaultNavbar;\nDefaultNavbar.defaultProps = {\n  transparent: false,\n  light: false,\n  action: false\n}; // Typechecking props for the DefaultNavbar\n\nDefaultNavbar.propTypes = {\n  transparent: PropTypes.bool,\n  light: PropTypes.bool,\n  action: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n    route: PropTypes.string.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\"]),\n    label: PropTypes.string.isRequired\n  })])\n};\nexport default DefaultNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultNavbar\");","map":{"version":3,"sources":["/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Navbars/DefaultNavbar/index.js"],"names":["useState","useEffect","Link","PropTypes","Container","Icon","MDBox","MDTypography","MDButton","DefaultNavbarLink","DefaultNavbarMobile","breakpoints","useMaterialUIController","DefaultNavbar","transparent","light","action","controller","darkMode","mobileNavbar","setMobileNavbar","mobileView","setMobileView","openMobileNavbar","currentTarget","parentNode","closeMobileNavbar","displayMobileNavbar","window","innerWidth","values","lg","addEventListener","removeEventListener","xs","sm","palette","transparentColor","white","background","functions","rgba","backgroundColor","main","sidenav","backdropFilter","type","route","color","label","mt","cursor","defaultProps","propTypes","bool","oneOfType","shape","oneOf","isRequired","string"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,OAAOC,mBAAP,MAAgC,oDAAhC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAEA;;AACA,SAASC,uBAAT,QAAwC,SAAxC;;;AAEA,SAASC,aAAT,OAAuD;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,GAAgC;AACrD,QAAM,CAACC,UAAD,IAAeL,uBAAuB,EAA5C;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeD,UAArB;AAEA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMuB,gBAAgB,GAAG;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAuBJ,eAAe,CAACI,aAAa,CAACC,UAAf,CAAtC;AAAA,GAAzB;;AACA,QAAMC,iBAAiB,GAAG,MAAMN,eAAe,CAAC,KAAD,CAA/C;;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,aAAS0B,mBAAT,GAA+B;AAC7B,UAAIC,MAAM,CAACC,UAAP,GAAoBlB,WAAW,CAACmB,MAAZ,CAAmBC,EAA3C,EAA+C;AAC7CT,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OAHD,MAGO;AACLE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF;AAED;AACJ;AACA;AACA;;;AACIQ,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,mBAAlC,EAhBc,CAkBd;;AACAA,IAAAA,mBAAmB,GAnBL,CAqBd;;AACA,WAAO,MAAMC,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCN,mBAArC,CAAb;AACD,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,EAAE,EAAE;AAAEO,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,EAAE,EAAErB,WAAW,GAAG,CAAH,GAAO,CAA/B;AAAkCiB,QAAAA,EAAE,EAAEjB,WAAW,GAAG,CAAH,GAAO;AAAxD,OAFN;AAGE,MAAA,EAAE,EAAE,CAHN;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,mBALR;AAME,MAAA,YAAY,EAAC,IANf;AAOE,MAAA,MAAM,EAAEA,WAAW,GAAG,MAAH,GAAY,IAPjC;AAQE,MAAA,KAAK,EAAEC,KAAK,GAAG,OAAH,GAAa,MAR3B;AASE,MAAA,OAAO,EAAC,MATV;AAUE,MAAA,cAAc,EAAC,eAVjB;AAWE,MAAA,UAAU,EAAC,QAXb;AAYE,MAAA,QAAQ,EAAC,UAZX;AAaE,MAAA,IAAI,EAAE,CAbR;AAcE,MAAA,MAAM,EAAE,CAdV;AAeE,MAAA,EAAE,EAAE;AAAA,YAAC;AACHqB,UAAAA,OAAO,EAAE;AAAEtB,YAAAA,WAAW,EAAEuB,gBAAf;AAAiCC,YAAAA,KAAjC;AAAwCC,YAAAA;AAAxC,WADN;AAEHC,UAAAA,SAAS,EAAE;AAAEC,YAAAA;AAAF;AAFR,SAAD;AAAA,eAGG;AACLC,UAAAA,eAAe,EAAE5B,WAAW,GACxBuB,gBAAgB,CAACM,IADO,GAExBF,IAAI,CAACvB,QAAQ,GAAGqB,UAAU,CAACK,OAAd,GAAwBN,KAAK,CAACK,IAAvC,EAA6C,GAA7C,CAHH;AAILE,UAAAA,cAAc,EAAE/B,WAAW,GAAG,MAAH,GAAa;AAJnC,SAHH;AAAA,OAfN;AAAA,8BAyBE,QAAC,KAAD;AACE,QAAA,SAAS,EAAEZ,IADb;AAEE,QAAA,EAAE,EAAC,GAFL;AAGE,QAAA,EAAE,EAAEY,WAAW,GAAG,GAAH,GAAS,IAH1B;AAIE,QAAA,UAAU,EAAE,CAJd;AAKE,QAAA,EAAE,EAAE;AAAEoB,UAAAA,EAAE,EAAE,CAAN;AAASH,UAAAA,EAAE,EAAE;AAAb,SALN;AAAA,+BAOE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC,QAAtB;AAA+B,UAAA,UAAU,EAAC,MAA1C;AAAiD,UAAA,KAAK,EAAEhB,KAAK,GAAG,OAAH,GAAa,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAzBF,eAoCE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE;AAAEmB,UAAAA,EAAE,EAAE,MAAN;AAAcH,UAAAA,EAAE,EAAE;AAAlB,SAAhC;AAA4D,QAAA,CAAC,EAAE,CAA/D;AAAkE,QAAA,CAAC,EAAE,CAArE;AAAA,gCACE,QAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,aAAxB;AAAsC,UAAA,IAAI,EAAC,WAA3C;AAAuD,UAAA,KAAK,EAAC,YAA7D;AAA0E,UAAA,KAAK,EAAEhB;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,QAAxB;AAAiC,UAAA,IAAI,EAAC,SAAtC;AAAgD,UAAA,KAAK,EAAC,UAAtD;AAAiE,UAAA,KAAK,EAAEA;AAAxE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,iBAAD;AACE,UAAA,IAAI,EAAC,gBADP;AAEE,UAAA,IAAI,EAAC,SAFP;AAGE,UAAA,KAAK,EAAC,yBAHR;AAIE,UAAA,KAAK,EAAEA;AAJT;AAAA;AAAA;AAAA;AAAA,gBAHF,eASE,QAAC,iBAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,SAFP;AAGE,UAAA,KAAK,EAAC,yBAHR;AAIE,UAAA,KAAK,EAAEA;AAJT;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF,EAoDGC,MAAM,KACJA,MAAM,CAAC8B,IAAP,KAAgB,UAAhB,gBACC,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE;AAAEZ,UAAAA,EAAE,EAAE,MAAN;AAAcH,UAAAA,EAAE,EAAE;AAAlB,SAAhB;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,SAAS,EAAE7B,IADb;AAEE,UAAA,EAAE,EAAEc,MAAM,CAAC+B,KAFb;AAGE,UAAA,OAAO,EAAC,UAHV;AAIE,UAAA,KAAK,EAAE/B,MAAM,CAACgC,KAAP,GAAehC,MAAM,CAACgC,KAAtB,GAA8B,MAJvC;AAKE,UAAA,IAAI,EAAC,OALP;AAAA,oBAOGhC,MAAM,CAACiC;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,gBAaC,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE;AAAEf,UAAAA,EAAE,EAAE,MAAN;AAAcH,UAAAA,EAAE,EAAE;AAAlB,SAAhB;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,SAAS,EAAC,GADZ;AAEE,UAAA,IAAI,EAAEf,MAAM,CAAC+B,KAFf;AAGE,UAAA,MAAM,EAAC,QAHT;AAIE,UAAA,GAAG,EAAC,YAJN;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,KAAK,EAAE/B,MAAM,CAACgC,KAAP,GAAehC,MAAM,CAACgC,KAAtB,GAA8B,MANvC;AAOE,UAAA,IAAI,EAAC,OAPP;AAQE,UAAA,EAAE,EAAE;AAAEE,YAAAA,EAAE,EAAE,CAAC;AAAP,WARN;AAAA,oBAUGlC,MAAM,CAACiC;AAVV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdG,CApDT,eAiFE,QAAC,KAAD;AACE,QAAA,OAAO,EAAE;AAAEf,UAAAA,EAAE,EAAE,cAAN;AAAsBH,UAAAA,EAAE,EAAE;AAA1B,SADX;AAEE,QAAA,UAAU,EAAE,CAFd;AAGE,QAAA,EAAE,EAAE,GAHN;AAIE,QAAA,EAAE,EAAE,GAJN;AAKE,QAAA,KAAK,EAAC,SALR;AAME,QAAA,EAAE,EAAE;AAAEoB,UAAAA,MAAM,EAAE;AAAV,SANN;AAOE,QAAA,OAAO,EAAE5B,gBAPX;AAAA,+BASE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,SAAf;AAAA,oBAA0BJ,YAAY,GAAG,OAAH,GAAa;AAAnD;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cAjFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EA8FGE,UAAU,iBAAI,QAAC,mBAAD;AAAqB,MAAA,IAAI,EAAEF,YAA3B;AAAyC,MAAA,KAAK,EAAEO;AAAhD;AAAA;AAAA;AAAA;AAAA,YA9FjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkGD,C,CAED;;;GAvISb,a;UACcD,uB;;;KADdC,a;AAwITA,aAAa,CAACuC,YAAd,GAA6B;AAC3BtC,EAAAA,WAAW,EAAE,KADc;AAE3BC,EAAAA,KAAK,EAAE,KAFoB;AAG3BC,EAAAA,MAAM,EAAE;AAHmB,CAA7B,C,CAMA;;AACAH,aAAa,CAACwC,SAAd,GAA0B;AACxBvC,EAAAA,WAAW,EAAEX,SAAS,CAACmD,IADC;AAExBvC,EAAAA,KAAK,EAAEZ,SAAS,CAACmD,IAFO;AAGxBtC,EAAAA,MAAM,EAAEb,SAAS,CAACoD,SAAV,CAAoB,CAC1BpD,SAAS,CAACmD,IADgB,EAE1BnD,SAAS,CAACqD,KAAV,CAAgB;AACdV,IAAAA,IAAI,EAAE3C,SAAS,CAACsD,KAAV,CAAgB,CAAC,UAAD,EAAa,UAAb,CAAhB,EAA0CC,UADlC;AAEdX,IAAAA,KAAK,EAAE5C,SAAS,CAACwD,MAAV,CAAiBD,UAFV;AAGdV,IAAAA,KAAK,EAAE7C,SAAS,CAACsD,KAAV,CAAgB,CACrB,SADqB,EAErB,WAFqB,EAGrB,MAHqB,EAIrB,SAJqB,EAKrB,SALqB,EAMrB,OANqB,EAOrB,MAPqB,EAQrB,OARqB,CAAhB,CAHO;AAadR,IAAAA,KAAK,EAAE9C,SAAS,CAACwD,MAAV,CAAiBD;AAbV,GAAhB,CAF0B,CAApB;AAHgB,CAA1B;AAuBA,eAAe7C,aAAf","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// react-router components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Container from \"@mui/material/Container\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport DefaultNavbarLink from \"examples/Navbars/DefaultNavbar/DefaultNavbarLink\";\nimport DefaultNavbarMobile from \"examples/Navbars/DefaultNavbar/DefaultNavbarMobile\";\n\n// Material Dashboard 2 PRO React base styles\nimport breakpoints from \"assets/theme/base/breakpoints\";\n\n// Material Dashboard 2 PRO React context\nimport { useMaterialUIController } from \"context\";\n\nfunction DefaultNavbar({ transparent, light, action }) {\n  const [controller] = useMaterialUIController();\n  const { darkMode } = controller;\n\n  const [mobileNavbar, setMobileNavbar] = useState(false);\n  const [mobileView, setMobileView] = useState(false);\n\n  const openMobileNavbar = ({ currentTarget }) => setMobileNavbar(currentTarget.parentNode);\n  const closeMobileNavbar = () => setMobileNavbar(false);\n\n  useEffect(() => {\n    // A function that sets the display state for the DefaultNavbarMobile.\n    function displayMobileNavbar() {\n      if (window.innerWidth < breakpoints.values.lg) {\n        setMobileView(true);\n        setMobileNavbar(false);\n      } else {\n        setMobileView(false);\n        setMobileNavbar(false);\n      }\n    }\n\n    /** \n     The event listener that's calling the displayMobileNavbar function when \n     resizing the window.\n    */\n    window.addEventListener(\"resize\", displayMobileNavbar);\n\n    // Call the displayMobileNavbar function to set the state with the initial value.\n    displayMobileNavbar();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", displayMobileNavbar);\n  }, []);\n\n  return (\n    <Container>\n      <MDBox\n        py={1}\n        px={{ xs: 4, sm: transparent ? 2 : 3, lg: transparent ? 0 : 2 }}\n        my={3}\n        mx={3}\n        width=\"calc(100% - 48px)\"\n        borderRadius=\"lg\"\n        shadow={transparent ? \"none\" : \"md\"}\n        color={light ? \"white\" : \"dark\"}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        position=\"absolute\"\n        left={0}\n        zIndex={3}\n        sx={({\n          palette: { transparent: transparentColor, white, background },\n          functions: { rgba },\n        }) => ({\n          backgroundColor: transparent\n            ? transparentColor.main\n            : rgba(darkMode ? background.sidenav : white.main, 0.8),\n          backdropFilter: transparent ? \"none\" : `saturate(200%) blur(30px)`,\n        })}\n      >\n        <MDBox\n          component={Link}\n          to=\"/\"\n          py={transparent ? 1.5 : 0.75}\n          lineHeight={1}\n          pl={{ xs: 0, lg: 1 }}\n        >\n          <MDTypography variant=\"button\" fontWeight=\"bold\" color={light ? \"white\" : \"dark\"}>\n            Material Dashboard 2\n          </MDTypography>\n        </MDBox>\n        <MDBox color=\"inherit\" display={{ xs: \"none\", lg: \"flex\" }} m={0} p={0}>\n          <DefaultNavbarLink icon=\"donut_large\" name=\"dashboard\" route=\"/dashboard\" light={light} />\n          <DefaultNavbarLink icon=\"person\" name=\"profile\" route=\"/profile\" light={light} />\n          <DefaultNavbarLink\n            icon=\"account_circle\"\n            name=\"sign up\"\n            route=\"/authentication/sign-up\"\n            light={light}\n          />\n          <DefaultNavbarLink\n            icon=\"key\"\n            name=\"sign in\"\n            route=\"/authentication/sign-in\"\n            light={light}\n          />\n        </MDBox>\n        {action &&\n          (action.type === \"internal\" ? (\n            <MDBox display={{ xs: \"none\", lg: \"inline-block\" }}>\n              <MDButton\n                component={Link}\n                to={action.route}\n                variant=\"gradient\"\n                color={action.color ? action.color : \"info\"}\n                size=\"small\"\n              >\n                {action.label}\n              </MDButton>\n            </MDBox>\n          ) : (\n            <MDBox display={{ xs: \"none\", lg: \"inline-block\" }}>\n              <MDButton\n                component=\"a\"\n                href={action.route}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                variant=\"gradient\"\n                color={action.color ? action.color : \"info\"}\n                size=\"small\"\n                sx={{ mt: -0.3 }}\n              >\n                {action.label}\n              </MDButton>\n            </MDBox>\n          ))}\n        <MDBox\n          display={{ xs: \"inline-block\", lg: \"none\" }}\n          lineHeight={0}\n          py={1.5}\n          pl={1.5}\n          color=\"inherit\"\n          sx={{ cursor: \"pointer\" }}\n          onClick={openMobileNavbar}\n        >\n          <Icon fontSize=\"default\">{mobileNavbar ? \"close\" : \"menu\"}</Icon>\n        </MDBox>\n      </MDBox>\n      {mobileView && <DefaultNavbarMobile open={mobileNavbar} close={closeMobileNavbar} />}\n    </Container>\n  );\n}\n\n// Setting default values for the props of DefaultNavbar\nDefaultNavbar.defaultProps = {\n  transparent: false,\n  light: false,\n  action: false,\n};\n\n// Typechecking props for the DefaultNavbar\nDefaultNavbar.propTypes = {\n  transparent: PropTypes.bool,\n  light: PropTypes.bool,\n  action: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n      route: PropTypes.string.isRequired,\n      color: PropTypes.oneOf([\n        \"primary\",\n        \"secondary\",\n        \"info\",\n        \"success\",\n        \"warning\",\n        \"error\",\n        \"dark\",\n        \"light\",\n      ]),\n      label: PropTypes.string.isRequired,\n    }),\n  ]),\n};\n\nexport default DefaultNavbar;\n"]},"metadata":{},"sourceType":"module"}