{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Cards/StatisticsCards/ComplexStatisticsCard/index.js\";\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ComplexStatisticsCard(_ref) {\n  let {\n    color,\n    title,\n    count,\n    percentage,\n    icon\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      pt: 1,\n      px: 2,\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        variant: \"gradient\",\n        bgColor: color,\n        color: color === \"light\" ? \"dark\" : \"white\",\n        coloredShadow: color,\n        borderRadius: \"xl\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"4rem\",\n        height: \"4rem\",\n        mt: -3,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          fontSize: \"medium\",\n          color: \"inherit\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        textAlign: \"right\",\n        lineHeight: 1.25,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          fontWeight: \"light\",\n          color: \"text\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h4\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      pb: 2,\n      px: 2,\n      children: /*#__PURE__*/_jsxDEV(MDTypography, {\n        component: \"p\",\n        variant: \"button\",\n        color: \"text\",\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          component: \"span\",\n          variant: \"button\",\n          fontWeight: \"bold\",\n          color: percentage.color,\n          children: percentage.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \"\\xA0\", percentage.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n} // Setting default values for the props of ComplexStatisticsCard\n\n\n_c = ComplexStatisticsCard;\nComplexStatisticsCard.defaultProps = {\n  color: \"info\",\n  percentage: {\n    color: \"success\",\n    text: \"\",\n    label: \"\"\n  }\n}; // Typechecking props for the ComplexStatisticsCard\n\nComplexStatisticsCard.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  percentage: PropTypes.shape({\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"white\"]),\n    amount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.string\n  }),\n  icon: PropTypes.node.isRequired\n};\nexport default ComplexStatisticsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComplexStatisticsCard\");","map":{"version":3,"sources":["/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Cards/StatisticsCards/ComplexStatisticsCard/index.js"],"names":["PropTypes","Card","Divider","Icon","MDBox","MDTypography","ComplexStatisticsCard","color","title","count","percentage","icon","amount","label","defaultProps","text","propTypes","oneOf","string","isRequired","oneOfType","number","shape","node"],"mappings":"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","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\nfunction ComplexStatisticsCard({ color, title, count, percentage, icon }) {\n  return (\n    <Card>\n      <MDBox display=\"flex\" justifyContent=\"space-between\" pt={1} px={2}>\n        <MDBox\n          variant=\"gradient\"\n          bgColor={color}\n          color={color === \"light\" ? \"dark\" : \"white\"}\n          coloredShadow={color}\n          borderRadius=\"xl\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          width=\"4rem\"\n          height=\"4rem\"\n          mt={-3}\n        >\n          <Icon fontSize=\"medium\" color=\"inherit\">\n            {icon}\n          </Icon>\n        </MDBox>\n        <MDBox textAlign=\"right\" lineHeight={1.25}>\n          <MDTypography variant=\"button\" fontWeight=\"light\" color=\"text\">\n            {title}\n          </MDTypography>\n          <MDTypography variant=\"h4\">{count}</MDTypography>\n        </MDBox>\n      </MDBox>\n      <Divider />\n      <MDBox pb={2} px={2}>\n        <MDTypography component=\"p\" variant=\"button\" color=\"text\" display=\"flex\">\n          <MDTypography\n            component=\"span\"\n            variant=\"button\"\n            fontWeight=\"bold\"\n            color={percentage.color}\n          >\n            {percentage.amount}\n          </MDTypography>\n          &nbsp;{percentage.label}\n        </MDTypography>\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ComplexStatisticsCard\nComplexStatisticsCard.defaultProps = {\n  color: \"info\",\n  percentage: {\n    color: \"success\",\n    text: \"\",\n    label: \"\",\n  },\n};\n\n// Typechecking props for the ComplexStatisticsCard\nComplexStatisticsCard.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n  ]),\n  title: PropTypes.string.isRequired,\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  percentage: PropTypes.shape({\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"error\",\n      \"dark\",\n      \"white\",\n    ]),\n    amount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.string,\n  }),\n  icon: PropTypes.node.isRequired,\n};\n\nexport default ComplexStatisticsCard;\n"]},"metadata":{},"sourceType":"module"}