{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Configurator/index.js\",\n    _s = $RefreshSig$();\n\n/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport { useState, useEffect } from \"react\"; // react-github-btn\n\nimport GitHubButton from \"react-github-btn\"; // @mui material components\n\nimport Divider from \"@mui/material/Divider\";\nimport Switch from \"@mui/material/Switch\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\"; // @mui icons\n\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport FacebookIcon from \"@mui/icons-material/Facebook\"; // Material Dashboard 2 React components\n\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\"; // Custom styles for the Configurator\n\nimport ConfiguratorRoot from \"examples/Configurator/ConfiguratorRoot\"; // Material Dashboard 2 PRO React context\n\nimport { useMaterialUIController, setOpenConfigurator, setTransparentSidenav, setWhiteSidenav, setFixedNavbar, setSidenavColor, setDarkMode } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Configurator() {\n  _s();\n\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    openConfigurator,\n    fixedNavbar,\n    sidenavColor,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode\n  } = controller;\n  const [disabled, setDisabled] = useState(false);\n  const sidenavColors = [\"primary\", \"dark\", \"info\", \"success\", \"warning\", \"error\"]; // Use the useEffect hook to change the button state for the sidenav type based on window size.\n\n  useEffect(() => {\n    // A function that sets the disabled state of the buttons for the sidenav type.\n    function handleDisabled() {\n      return window.innerWidth > 1200 ? setDisabled(false) : setDisabled(true);\n    } // The event listener that's calling the handleDisabled function when resizing the window.\n\n\n    window.addEventListener(\"resize\", handleDisabled); // Call the handleDisabled function to set the state with the initial value.\n\n    handleDisabled(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleDisabled);\n  }, []);\n\n  const handleCloseConfigurator = () => setOpenConfigurator(dispatch, false);\n\n  const handleTransparentSidenav = () => {\n    setTransparentSidenav(dispatch, true);\n    setWhiteSidenav(dispatch, false);\n  };\n\n  const handleWhiteSidenav = () => {\n    setWhiteSidenav(dispatch, true);\n    setTransparentSidenav(dispatch, false);\n  };\n\n  const handleDarkSidenav = () => {\n    setWhiteSidenav(dispatch, false);\n    setTransparentSidenav(dispatch, false);\n  };\n\n  const handleFixedNavbar = () => setFixedNavbar(dispatch, !fixedNavbar);\n\n  const handleDarkMode = () => setDarkMode(dispatch, !darkMode); // sidenav type buttons styles\n\n\n  const sidenavTypeButtonsStyles = _ref => {\n    let {\n      functions: {\n        pxToRem\n      },\n      palette: {\n        white,\n        dark,\n        background\n      },\n      borders: {\n        borderWidth\n      }\n    } = _ref;\n    return {\n      height: pxToRem(39),\n      background: darkMode ? background.sidenav : white.main,\n      color: darkMode ? white.main : dark.main,\n      border: `${borderWidth[1]} solid ${darkMode ? white.main : dark.main}`,\n      \"&:hover, &:focus, &:focus:not(:hover)\": {\n        background: darkMode ? background.sidenav : white.main,\n        color: darkMode ? white.main : dark.main,\n        border: `${borderWidth[1]} solid ${darkMode ? white.main : dark.main}`\n      }\n    };\n  }; // sidenav type active button styles\n\n\n  const sidenavTypeActiveButtonStyles = _ref2 => {\n    let {\n      functions: {\n        pxToRem,\n        linearGradient\n      },\n      palette: {\n        white,\n        gradients,\n        background\n      }\n    } = _ref2;\n    return {\n      height: pxToRem(39),\n      background: darkMode ? white.main : linearGradient(gradients.dark.main, gradients.dark.state),\n      color: darkMode ? background.sidenav : white.main,\n      \"&:hover, &:focus, &:focus:not(:hover)\": {\n        background: darkMode ? white.main : linearGradient(gradients.dark.main, gradients.dark.state),\n        color: darkMode ? background.sidenav : white.main\n      }\n    };\n  };\n\n  useEffect(() => {\n    handleDarkMode();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ConfiguratorRoot, {\n    variant: \"permanent\",\n    ownerState: {\n      openConfigurator\n    },\n    children: [/*#__PURE__*/_jsxDEV(MDBox, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"baseline\",\n      pt: 4,\n      pb: 0.5,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h5\",\n          children: \"Material UI Configurator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"body2\",\n          color: \"text\",\n          children: \"See our dashboard options.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        sx: _ref3 => {\n          let {\n            typography: {\n              size\n            },\n            palette: {\n              dark,\n              white\n            }\n          } = _ref3;\n          return {\n            fontSize: `${size.lg} !important`,\n            color: darkMode ? white.main : dark.main,\n            stroke: \"currentColor\",\n            strokeWidth: \"2px\",\n            cursor: \"pointer\",\n            transform: \"translateY(5px)\"\n          };\n        },\n        onClick: handleCloseConfigurator,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      pt: 0.5,\n      pb: 3,\n      px: 3,\n      children: [/*#__PURE__*/_jsxDEV(MDBox, {\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          children: \"Sidenav Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          mb: 0.5,\n          children: sidenavColors.map(color => /*#__PURE__*/_jsxDEV(IconButton, {\n            sx: _ref4 => {\n              let {\n                borders: {\n                  borderWidth\n                },\n                palette: {\n                  white,\n                  dark,\n                  background\n                },\n                transitions\n              } = _ref4;\n              return {\n                width: \"24px\",\n                height: \"24px\",\n                padding: 0,\n                border: `${borderWidth[1]} solid ${darkMode ? background.sidenav : white.main}`,\n                borderColor: () => {\n                  let borderColorValue = sidenavColor === color && dark.main;\n\n                  if (darkMode && sidenavColor === color) {\n                    borderColorValue = white.main;\n                  }\n\n                  return borderColorValue;\n                },\n                transition: transitions.create(\"border-color\", {\n                  easing: transitions.easing.sharp,\n                  duration: transitions.duration.shorter\n                }),\n                backgroundImage: _ref5 => {\n                  let {\n                    functions: {\n                      linearGradient\n                    },\n                    palette: {\n                      gradients\n                    }\n                  } = _ref5;\n                  return linearGradient(gradients[color].main, gradients[color].state);\n                },\n                \"&:not(:last-child)\": {\n                  mr: 1\n                },\n                \"&:hover, &:focus, &:active\": {\n                  borderColor: darkMode ? white.main : dark.main\n                }\n              };\n            },\n            onClick: () => setSidenavColor(dispatch, color)\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        mt: 3,\n        lineHeight: 1,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          children: \"Sidenav Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          color: \"text\",\n          children: \"Choose between different sidenav types.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          sx: {\n            display: \"flex\",\n            mt: 2,\n            mr: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(MDButton, {\n            color: \"dark\",\n            variant: \"gradient\",\n            onClick: handleDarkSidenav,\n            disabled: disabled,\n            fullWidth: true,\n            sx: !transparentSidenav && !whiteSidenav ? sidenavTypeActiveButtonStyles : sidenavTypeButtonsStyles,\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              mx: 1,\n              width: \"8rem\",\n              minWidth: \"8rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(MDButton, {\n              color: \"dark\",\n              variant: \"gradient\",\n              onClick: handleTransparentSidenav,\n              disabled: disabled,\n              fullWidth: true,\n              sx: transparentSidenav && !whiteSidenav ? sidenavTypeActiveButtonStyles : sidenavTypeButtonsStyles,\n              children: \"Transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n            color: \"dark\",\n            variant: \"gradient\",\n            onClick: handleWhiteSidenav,\n            disabled: disabled,\n            fullWidth: true,\n            sx: whiteSidenav && !transparentSidenav ? sidenavTypeActiveButtonStyles : sidenavTypeButtonsStyles,\n            children: \"White\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mt: 3,\n        lineHeight: 1,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          children: \"Navbar Fixed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: fixedNavbar,\n          onChange: handleFixedNavbar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        lineHeight: 1,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          children: \"Light / Dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: darkMode,\n          onChange: handleDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        mt: 3,\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(MDButton, {\n          component: Link,\n          href: \"https://www.creative-tim.com/learning-lab/react/quick-start/material-dashboard/\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          color: darkMode ? \"light\" : \"dark\",\n          variant: \"outlined\",\n          fullWidth: true,\n          children: \"view documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(GitHubButton, {\n          href: \"https://github.com/creativetimofficial/material-dashboard-react\",\n          \"data-icon\": \"octicon-star\",\n          \"data-size\": \"large\",\n          \"data-show-count\": \"true\",\n          \"aria-label\": \"Star creativetimofficial/material-dashboard-react on GitHub\",\n          children: \"Star\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        mt: 2,\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(MDBox, {\n          mb: 0.5,\n          children: /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"h6\",\n            children: \"Thank you for sharing!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(MDBox, {\n            mr: 1.5,\n            children: /*#__PURE__*/_jsxDEV(MDButton, {\n              component: Link,\n              href: \"//twitter.com/intent/tweet?text=Check%20Material%20Dashboard%20React%20made%20by%20%40CreativeTim%20%23webdesign%20%23dashboard%20%23react%20%mui&url=https%3A%2F%2Fwww.creative-tim.com%2Fproduct%2Fmaterial-dashboard-react\",\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              color: \"dark\",\n              children: [/*#__PURE__*/_jsxDEV(TwitterIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), \"\\xA0 Tweet\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n            component: Link,\n            href: \"https://www.facebook.com/sharer/sharer.php?u=https://www.creative-tim.com/product/material-dashboard-react\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            color: \"dark\",\n            children: [/*#__PURE__*/_jsxDEV(FacebookIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), \"\\xA0 Share\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Configurator, \"fpX84LnJoAfjeJPr7FEItJEh0Rg=\", false, function () {\n  return [useMaterialUIController];\n});\n\n_c = Configurator;\nexport default Configurator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Configurator\");","map":{"version":3,"sources":["/Volumes/Data Drive/Daniyal/React/Runmator_Dashboard/src/examples/Configurator/index.js"],"names":["useState","useEffect","GitHubButton","Divider","Switch","IconButton","Link","Icon","TwitterIcon","FacebookIcon","MDBox","MDTypography","MDButton","ConfiguratorRoot","useMaterialUIController","setOpenConfigurator","setTransparentSidenav","setWhiteSidenav","setFixedNavbar","setSidenavColor","setDarkMode","Configurator","controller","dispatch","openConfigurator","fixedNavbar","sidenavColor","transparentSidenav","whiteSidenav","darkMode","disabled","setDisabled","sidenavColors","handleDisabled","window","innerWidth","addEventListener","removeEventListener","handleCloseConfigurator","handleTransparentSidenav","handleWhiteSidenav","handleDarkSidenav","handleFixedNavbar","handleDarkMode","sidenavTypeButtonsStyles","functions","pxToRem","palette","white","dark","background","borders","borderWidth","height","sidenav","main","color","border","sidenavTypeActiveButtonStyles","linearGradient","gradients","state","typography","size","fontSize","lg","stroke","strokeWidth","cursor","transform","map","transitions","width","padding","borderColor","borderColorValue","transition","create","easing","sharp","duration","shorter","backgroundImage","mr","display","mt","mx","minWidth"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,kBAAzB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,wCAA7B,C,CAEA;;AACA,SACEC,uBADF,EAEEC,mBAFF,EAGEC,qBAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,WAPF,QAQO,SARP;;;AAUA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBT,uBAAuB,EAAtD;AACA,QAAM;AACJU,IAAAA,gBADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA;AANI,MAOFP,UAPJ;AAQA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMgC,aAAa,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,MAApB,EAA4B,SAA5B,EAAuC,SAAvC,EAAkD,OAAlD,CAAtB,CAXsB,CAatB;;AACA/B,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,aAASgC,cAAT,GAA0B;AACxB,aAAOC,MAAM,CAACC,UAAP,GAAoB,IAApB,GAA2BJ,WAAW,CAAC,KAAD,CAAtC,GAAgDA,WAAW,CAAC,IAAD,CAAlE;AACD,KAJa,CAMd;;;AACAG,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,cAAlC,EAPc,CASd;;AACAA,IAAAA,cAAc,GAVA,CAYd;;AACA,WAAO,MAAMC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,cAArC,CAAb;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMK,uBAAuB,GAAG,MAAMvB,mBAAmB,CAACQ,QAAD,EAAW,KAAX,CAAzD;;AACA,QAAMgB,wBAAwB,GAAG,MAAM;AACrCvB,IAAAA,qBAAqB,CAACO,QAAD,EAAW,IAAX,CAArB;AACAN,IAAAA,eAAe,CAACM,QAAD,EAAW,KAAX,CAAf;AACD,GAHD;;AAIA,QAAMiB,kBAAkB,GAAG,MAAM;AAC/BvB,IAAAA,eAAe,CAACM,QAAD,EAAW,IAAX,CAAf;AACAP,IAAAA,qBAAqB,CAACO,QAAD,EAAW,KAAX,CAArB;AACD,GAHD;;AAIA,QAAMkB,iBAAiB,GAAG,MAAM;AAC9BxB,IAAAA,eAAe,CAACM,QAAD,EAAW,KAAX,CAAf;AACAP,IAAAA,qBAAqB,CAACO,QAAD,EAAW,KAAX,CAArB;AACD,GAHD;;AAIA,QAAMmB,iBAAiB,GAAG,MAAMxB,cAAc,CAACK,QAAD,EAAW,CAACE,WAAZ,CAA9C;;AACA,QAAMkB,cAAc,GAAG,MAAMvB,WAAW,CAACG,QAAD,EAAW,CAACM,QAAZ,CAAxC,CA5CsB,CA8CtB;;;AACA,QAAMe,wBAAwB,GAAG;AAAA,QAAC;AAChCC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF,OADqB;AAEhCC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAFuB;AAGhCC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AAHuB,KAAD;AAAA,WAI1B;AACLC,MAAAA,MAAM,EAAEP,OAAO,CAAC,EAAD,CADV;AAELI,MAAAA,UAAU,EAAErB,QAAQ,GAAGqB,UAAU,CAACI,OAAd,GAAwBN,KAAK,CAACO,IAF7C;AAGLC,MAAAA,KAAK,EAAE3B,QAAQ,GAAGmB,KAAK,CAACO,IAAT,GAAgBN,IAAI,CAACM,IAH/B;AAILE,MAAAA,MAAM,EAAG,GAAEL,WAAW,CAAC,CAAD,CAAI,UAASvB,QAAQ,GAAGmB,KAAK,CAACO,IAAT,GAAgBN,IAAI,CAACM,IAAK,EAJhE;AAML,+CAAyC;AACvCL,QAAAA,UAAU,EAAErB,QAAQ,GAAGqB,UAAU,CAACI,OAAd,GAAwBN,KAAK,CAACO,IADX;AAEvCC,QAAAA,KAAK,EAAE3B,QAAQ,GAAGmB,KAAK,CAACO,IAAT,GAAgBN,IAAI,CAACM,IAFG;AAGvCE,QAAAA,MAAM,EAAG,GAAEL,WAAW,CAAC,CAAD,CAAI,UAASvB,QAAQ,GAAGmB,KAAK,CAACO,IAAT,GAAgBN,IAAI,CAACM,IAAK;AAH9B;AANpC,KAJ0B;AAAA,GAAjC,CA/CsB,CAgEtB;;;AACA,QAAMG,6BAA6B,GAAG;AAAA,QAAC;AACrCb,MAAAA,SAAS,EAAE;AAAEC,QAAAA,OAAF;AAAWa,QAAAA;AAAX,OAD0B;AAErCZ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAF;AAASY,QAAAA,SAAT;AAAoBV,QAAAA;AAApB;AAF4B,KAAD;AAAA,WAG/B;AACLG,MAAAA,MAAM,EAAEP,OAAO,CAAC,EAAD,CADV;AAELI,MAAAA,UAAU,EAAErB,QAAQ,GAAGmB,KAAK,CAACO,IAAT,GAAgBI,cAAc,CAACC,SAAS,CAACX,IAAV,CAAeM,IAAhB,EAAsBK,SAAS,CAACX,IAAV,CAAeY,KAArC,CAF7C;AAGLL,MAAAA,KAAK,EAAE3B,QAAQ,GAAGqB,UAAU,CAACI,OAAd,GAAwBN,KAAK,CAACO,IAHxC;AAKL,+CAAyC;AACvCL,QAAAA,UAAU,EAAErB,QAAQ,GAAGmB,KAAK,CAACO,IAAT,GAAgBI,cAAc,CAACC,SAAS,CAACX,IAAV,CAAeM,IAAhB,EAAsBK,SAAS,CAACX,IAAV,CAAeY,KAArC,CADX;AAEvCL,QAAAA,KAAK,EAAE3B,QAAQ,GAAGqB,UAAU,CAACI,OAAd,GAAwBN,KAAK,CAACO;AAFN;AALpC,KAH+B;AAAA,GAAtC;;AAcAtD,EAAAA,SAAS,CAAC,MAAM;AACd0C,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,WAA1B;AAAsC,IAAA,UAAU,EAAE;AAAEnB,MAAAA;AAAF,KAAlD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,cAAc,EAAC,eAFjB;AAGE,MAAA,UAAU,EAAC,UAHb;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,EAAE,EAAE,GALN;AAME,MAAA,EAAE,EAAE,CANN;AAAA,8BAQE,QAAC,KAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC,OAAtB;AAA8B,UAAA,KAAK,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,IAAD;AACE,QAAA,EAAE,EAAE;AAAA,cAAC;AAAEsC,YAAAA,UAAU,EAAE;AAAEC,cAAAA;AAAF,aAAd;AAAwBhB,YAAAA,OAAO,EAAE;AAAEE,cAAAA,IAAF;AAAQD,cAAAA;AAAR;AAAjC,WAAD;AAAA,iBAAyD;AAC3DgB,YAAAA,QAAQ,EAAG,GAAED,IAAI,CAACE,EAAG,aADsC;AAE3DT,YAAAA,KAAK,EAAE3B,QAAQ,GAAGmB,KAAK,CAACO,IAAT,GAAgBN,IAAI,CAACM,IAFuB;AAG3DW,YAAAA,MAAM,EAAE,cAHmD;AAI3DC,YAAAA,WAAW,EAAE,KAJ8C;AAK3DC,YAAAA,MAAM,EAAE,SALmD;AAM3DC,YAAAA,SAAS,EAAE;AANgD,WAAzD;AAAA,SADN;AASE,QAAA,OAAO,EAAE/B,uBATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA+BE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YA/BF,eAiCE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE,GAAX;AAAgB,MAAA,EAAE,EAAE,CAApB;AAAuB,MAAA,EAAE,EAAE,CAA3B;AAAA,8BACE,QAAC,KAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAE,GAAX;AAAA,oBACGN,aAAa,CAACsC,GAAd,CAAmBd,KAAD,iBACjB,QAAC,UAAD;AAEE,YAAA,EAAE,EAAE;AAAA,kBAAC;AACHL,gBAAAA,OAAO,EAAE;AAAEC,kBAAAA;AAAF,iBADN;AAEHL,gBAAAA,OAAO,EAAE;AAAEC,kBAAAA,KAAF;AAASC,kBAAAA,IAAT;AAAeC,kBAAAA;AAAf,iBAFN;AAGHqB,gBAAAA;AAHG,eAAD;AAAA,qBAIG;AACLC,gBAAAA,KAAK,EAAE,MADF;AAELnB,gBAAAA,MAAM,EAAE,MAFH;AAGLoB,gBAAAA,OAAO,EAAE,CAHJ;AAILhB,gBAAAA,MAAM,EAAG,GAAEL,WAAW,CAAC,CAAD,CAAI,UAASvB,QAAQ,GAAGqB,UAAU,CAACI,OAAd,GAAwBN,KAAK,CAACO,IAAK,EAJzE;AAKLmB,gBAAAA,WAAW,EAAE,MAAM;AACjB,sBAAIC,gBAAgB,GAAGjD,YAAY,KAAK8B,KAAjB,IAA0BP,IAAI,CAACM,IAAtD;;AAEA,sBAAI1B,QAAQ,IAAIH,YAAY,KAAK8B,KAAjC,EAAwC;AACtCmB,oBAAAA,gBAAgB,GAAG3B,KAAK,CAACO,IAAzB;AACD;;AAED,yBAAOoB,gBAAP;AACD,iBAbI;AAcLC,gBAAAA,UAAU,EAAEL,WAAW,CAACM,MAAZ,CAAmB,cAAnB,EAAmC;AAC7CC,kBAAAA,MAAM,EAAEP,WAAW,CAACO,MAAZ,CAAmBC,KADkB;AAE7CC,kBAAAA,QAAQ,EAAET,WAAW,CAACS,QAAZ,CAAqBC;AAFc,iBAAnC,CAdP;AAkBLC,gBAAAA,eAAe,EAAE;AAAA,sBAAC;AAAErC,oBAAAA,SAAS,EAAE;AAAEc,sBAAAA;AAAF,qBAAb;AAAiCZ,oBAAAA,OAAO,EAAE;AAAEa,sBAAAA;AAAF;AAA1C,mBAAD;AAAA,yBACfD,cAAc,CAACC,SAAS,CAACJ,KAAD,CAAT,CAAiBD,IAAlB,EAAwBK,SAAS,CAACJ,KAAD,CAAT,CAAiBK,KAAzC,CADC;AAAA,iBAlBZ;AAqBL,sCAAsB;AACpBsB,kBAAAA,EAAE,EAAE;AADgB,iBArBjB;AAyBL,8CAA8B;AAC5BT,kBAAAA,WAAW,EAAE7C,QAAQ,GAAGmB,KAAK,CAACO,IAAT,GAAgBN,IAAI,CAACM;AADd;AAzBzB,eAJH;AAAA,aAFN;AAmCE,YAAA,OAAO,EAAE,MAAMpC,eAAe,CAACI,QAAD,EAAWiC,KAAX;AAnChC,aACOA,KADP;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA+CE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAc,QAAA,UAAU,EAAE,CAA1B;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC,QAAtB;AAA+B,UAAA,KAAK,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,KAAD;AACE,UAAA,EAAE,EAAE;AACF4B,YAAAA,OAAO,EAAE,MADP;AAEFC,YAAAA,EAAE,EAAE,CAFF;AAGFF,YAAAA,EAAE,EAAE;AAHF,WADN;AAAA,kCAOE,QAAC,QAAD;AACE,YAAA,KAAK,EAAC,MADR;AAEE,YAAA,OAAO,EAAC,UAFV;AAGE,YAAA,OAAO,EAAE1C,iBAHX;AAIE,YAAA,QAAQ,EAAEX,QAJZ;AAKE,YAAA,SAAS,MALX;AAME,YAAA,EAAE,EACA,CAACH,kBAAD,IAAuB,CAACC,YAAxB,GACI8B,6BADJ,GAEId,wBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAqBE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAE;AAAE0C,cAAAA,EAAE,EAAE,CAAN;AAASd,cAAAA,KAAK,EAAE,MAAhB;AAAwBe,cAAAA,QAAQ,EAAE;AAAlC,aAAX;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,OAAO,EAAC,UAFV;AAGE,cAAA,OAAO,EAAEhD,wBAHX;AAIE,cAAA,QAAQ,EAAET,QAJZ;AAKE,cAAA,SAAS,MALX;AAME,cAAA,EAAE,EACAH,kBAAkB,IAAI,CAACC,YAAvB,GACI8B,6BADJ,GAEId,wBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArBF,eAqCE,QAAC,QAAD;AACE,YAAA,KAAK,EAAC,MADR;AAEE,YAAA,OAAO,EAAC,UAFV;AAGE,YAAA,OAAO,EAAEJ,kBAHX;AAIE,YAAA,QAAQ,EAAEV,QAJZ;AAKE,YAAA,SAAS,MALX;AAME,YAAA,EAAE,EACAF,YAAY,IAAI,CAACD,kBAAjB,GACI+B,6BADJ,GAEId,wBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CF,eA0GE,QAAC,KAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,cAAc,EAAC,eAFjB;AAGE,QAAA,UAAU,EAAC,QAHb;AAIE,QAAA,EAAE,EAAE,CAJN;AAKE,QAAA,UAAU,EAAE,CALd;AAAA,gCAOE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eASE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEnB,WAAjB;AAA8B,UAAA,QAAQ,EAAEiB;AAAxC;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1GF,eAqHE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cArHF,eAsHE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,cAAc,EAAC,eAArC;AAAqD,QAAA,UAAU,EAAC,QAAhE;AAAyE,QAAA,UAAU,EAAE,CAArF;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEb,QAAjB;AAA2B,UAAA,QAAQ,EAAEc;AAArC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtHF,eA2HE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cA3HF,eA4HE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAc,QAAA,EAAE,EAAE,CAAlB;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,SAAS,EAAErC,IADb;AAEE,UAAA,IAAI,EAAC,iFAFP;AAGE,UAAA,MAAM,EAAC,QAHT;AAIE,UAAA,GAAG,EAAC,YAJN;AAKE,UAAA,KAAK,EAAEuB,QAAQ,GAAG,OAAH,GAAa,MAL9B;AAME,UAAA,OAAO,EAAC,UANV;AAOE,UAAA,SAAS,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5HF,eAyIE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,cAAc,EAAC,QAArC;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,iEADP;AAEE,uBAAU,cAFZ;AAGE,uBAAU,OAHZ;AAIE,6BAAgB,MAJlB;AAKE,wBAAW,6DALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzIF,eAoJE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAc,QAAA,SAAS,EAAC,QAAxB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAE,GAAX;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,cAAc,EAAC,QAArC;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAE,GAAX;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,SAAS,EAAEvB,IADb;AAEE,cAAA,IAAI,EAAC,+NAFP;AAGE,cAAA,MAAM,EAAC,QAHT;AAIE,cAAA,GAAG,EAAC,YAJN;AAKE,cAAA,KAAK,EAAC,MALR;AAAA,sCAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,QAAD;AACE,YAAA,SAAS,EAAEA,IADb;AAEE,YAAA,IAAI,EAAC,4GAFP;AAGE,YAAA,MAAM,EAAC,QAHT;AAIE,YAAA,GAAG,EAAC,YAJN;AAKE,YAAA,KAAK,EAAC,MALR;AAAA,oCAOE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cApJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuND;;GA1SQe,Y;UACwBP,uB;;;KADxBO,Y;AA4ST,eAAeA,YAAf","sourcesContent":["/**\n=========================================================\n*  \n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// react-github-btn\nimport GitHubButton from \"react-github-btn\";\n\n// @mui material components\nimport Divider from \"@mui/material/Divider\";\nimport Switch from \"@mui/material/Switch\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Link from \"@mui/material/Link\";\nimport Icon from \"@mui/material/Icon\";\n\n// @mui icons\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDButton from \"components/MDButton\";\n\n// Custom styles for the Configurator\nimport ConfiguratorRoot from \"examples/Configurator/ConfiguratorRoot\";\n\n// Material Dashboard 2 PRO React context\nimport {\n  useMaterialUIController,\n  setOpenConfigurator,\n  setTransparentSidenav,\n  setWhiteSidenav,\n  setFixedNavbar,\n  setSidenavColor,\n  setDarkMode,\n} from \"context\";\n\nfunction Configurator() {\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    openConfigurator,\n    fixedNavbar,\n    sidenavColor,\n    transparentSidenav,\n    whiteSidenav,\n    darkMode,\n  } = controller;\n  const [disabled, setDisabled] = useState(false);\n  const sidenavColors = [\"primary\", \"dark\", \"info\", \"success\", \"warning\", \"error\"];\n\n  // Use the useEffect hook to change the button state for the sidenav type based on window size.\n  useEffect(() => {\n    // A function that sets the disabled state of the buttons for the sidenav type.\n    function handleDisabled() {\n      return window.innerWidth > 1200 ? setDisabled(false) : setDisabled(true);\n    }\n\n    // The event listener that's calling the handleDisabled function when resizing the window.\n    window.addEventListener(\"resize\", handleDisabled);\n\n    // Call the handleDisabled function to set the state with the initial value.\n    handleDisabled();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleDisabled);\n  }, []);\n\n  const handleCloseConfigurator = () => setOpenConfigurator(dispatch, false);\n  const handleTransparentSidenav = () => {\n    setTransparentSidenav(dispatch, true);\n    setWhiteSidenav(dispatch, false);\n  };\n  const handleWhiteSidenav = () => {\n    setWhiteSidenav(dispatch, true);\n    setTransparentSidenav(dispatch, false);\n  };\n  const handleDarkSidenav = () => {\n    setWhiteSidenav(dispatch, false);\n    setTransparentSidenav(dispatch, false);\n  };\n  const handleFixedNavbar = () => setFixedNavbar(dispatch, !fixedNavbar);\n  const handleDarkMode = () => setDarkMode(dispatch, !darkMode);\n\n  // sidenav type buttons styles\n  const sidenavTypeButtonsStyles = ({\n    functions: { pxToRem },\n    palette: { white, dark, background },\n    borders: { borderWidth },\n  }) => ({\n    height: pxToRem(39),\n    background: darkMode ? background.sidenav : white.main,\n    color: darkMode ? white.main : dark.main,\n    border: `${borderWidth[1]} solid ${darkMode ? white.main : dark.main}`,\n\n    \"&:hover, &:focus, &:focus:not(:hover)\": {\n      background: darkMode ? background.sidenav : white.main,\n      color: darkMode ? white.main : dark.main,\n      border: `${borderWidth[1]} solid ${darkMode ? white.main : dark.main}`,\n    },\n  });\n\n  // sidenav type active button styles\n  const sidenavTypeActiveButtonStyles = ({\n    functions: { pxToRem, linearGradient },\n    palette: { white, gradients, background },\n  }) => ({\n    height: pxToRem(39),\n    background: darkMode ? white.main : linearGradient(gradients.dark.main, gradients.dark.state),\n    color: darkMode ? background.sidenav : white.main,\n\n    \"&:hover, &:focus, &:focus:not(:hover)\": {\n      background: darkMode ? white.main : linearGradient(gradients.dark.main, gradients.dark.state),\n      color: darkMode ? background.sidenav : white.main,\n    },\n  });\n\n  useEffect(() => {\n    handleDarkMode();\n  }, []);\n\n  return (\n    <ConfiguratorRoot variant=\"permanent\" ownerState={{ openConfigurator }}>\n      <MDBox\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"baseline\"\n        pt={4}\n        pb={0.5}\n        px={3}\n      >\n        <MDBox>\n          <MDTypography variant=\"h5\">Material UI Configurator</MDTypography>\n          <MDTypography variant=\"body2\" color=\"text\">\n            See our dashboard options.\n          </MDTypography>\n        </MDBox>\n\n        <Icon\n          sx={({ typography: { size }, palette: { dark, white } }) => ({\n            fontSize: `${size.lg} !important`,\n            color: darkMode ? white.main : dark.main,\n            stroke: \"currentColor\",\n            strokeWidth: \"2px\",\n            cursor: \"pointer\",\n            transform: \"translateY(5px)\",\n          })}\n          onClick={handleCloseConfigurator}\n        >\n          close\n        </Icon>\n      </MDBox>\n\n      <Divider />\n\n      <MDBox pt={0.5} pb={3} px={3}>\n        <MDBox>\n          <MDTypography variant=\"h6\">Sidenav Colors</MDTypography>\n\n          <MDBox mb={0.5}>\n            {sidenavColors.map((color) => (\n              <IconButton\n                key={color}\n                sx={({\n                  borders: { borderWidth },\n                  palette: { white, dark, background },\n                  transitions,\n                }) => ({\n                  width: \"24px\",\n                  height: \"24px\",\n                  padding: 0,\n                  border: `${borderWidth[1]} solid ${darkMode ? background.sidenav : white.main}`,\n                  borderColor: () => {\n                    let borderColorValue = sidenavColor === color && dark.main;\n\n                    if (darkMode && sidenavColor === color) {\n                      borderColorValue = white.main;\n                    }\n\n                    return borderColorValue;\n                  },\n                  transition: transitions.create(\"border-color\", {\n                    easing: transitions.easing.sharp,\n                    duration: transitions.duration.shorter,\n                  }),\n                  backgroundImage: ({ functions: { linearGradient }, palette: { gradients } }) =>\n                    linearGradient(gradients[color].main, gradients[color].state),\n\n                  \"&:not(:last-child)\": {\n                    mr: 1,\n                  },\n\n                  \"&:hover, &:focus, &:active\": {\n                    borderColor: darkMode ? white.main : dark.main,\n                  },\n                })}\n                onClick={() => setSidenavColor(dispatch, color)}\n              />\n            ))}\n          </MDBox>\n        </MDBox>\n\n        <MDBox mt={3} lineHeight={1}>\n          <MDTypography variant=\"h6\">Sidenav Type</MDTypography>\n          <MDTypography variant=\"button\" color=\"text\">\n            Choose between different sidenav types.\n          </MDTypography>\n\n          <MDBox\n            sx={{\n              display: \"flex\",\n              mt: 2,\n              mr: 1,\n            }}\n          >\n            <MDButton\n              color=\"dark\"\n              variant=\"gradient\"\n              onClick={handleDarkSidenav}\n              disabled={disabled}\n              fullWidth\n              sx={\n                !transparentSidenav && !whiteSidenav\n                  ? sidenavTypeActiveButtonStyles\n                  : sidenavTypeButtonsStyles\n              }\n            >\n              Dark\n            </MDButton>\n            <MDBox sx={{ mx: 1, width: \"8rem\", minWidth: \"8rem\" }}>\n              <MDButton\n                color=\"dark\"\n                variant=\"gradient\"\n                onClick={handleTransparentSidenav}\n                disabled={disabled}\n                fullWidth\n                sx={\n                  transparentSidenav && !whiteSidenav\n                    ? sidenavTypeActiveButtonStyles\n                    : sidenavTypeButtonsStyles\n                }\n              >\n                Transparent\n              </MDButton>\n            </MDBox>\n            <MDButton\n              color=\"dark\"\n              variant=\"gradient\"\n              onClick={handleWhiteSidenav}\n              disabled={disabled}\n              fullWidth\n              sx={\n                whiteSidenav && !transparentSidenav\n                  ? sidenavTypeActiveButtonStyles\n                  : sidenavTypeButtonsStyles\n              }\n            >\n              White\n            </MDButton>\n          </MDBox>\n        </MDBox>\n        <MDBox\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mt={3}\n          lineHeight={1}\n        >\n          <MDTypography variant=\"h6\">Navbar Fixed</MDTypography>\n\n          <Switch checked={fixedNavbar} onChange={handleFixedNavbar} />\n        </MDBox>\n        <Divider />\n        <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" lineHeight={1}>\n          <MDTypography variant=\"h6\">Light / Dark</MDTypography>\n\n          <Switch checked={darkMode} onChange={handleDarkMode} />\n        </MDBox>\n        <Divider />\n        <MDBox mt={3} mb={2}>\n          <MDButton\n            component={Link}\n            href=\"https://www.creative-tim.com/learning-lab/react/quick-start/material-dashboard/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            color={darkMode ? \"light\" : \"dark\"}\n            variant=\"outlined\"\n            fullWidth\n          >\n            view documentation\n          </MDButton>\n        </MDBox>\n        <MDBox display=\"flex\" justifyContent=\"center\">\n          <GitHubButton\n            href=\"https://github.com/creativetimofficial/material-dashboard-react\"\n            data-icon=\"octicon-star\"\n            data-size=\"large\"\n            data-show-count=\"true\"\n            aria-label=\"Star creativetimofficial/material-dashboard-react on GitHub\"\n          >\n            Star\n          </GitHubButton>\n        </MDBox>\n        <MDBox mt={2} textAlign=\"center\">\n          <MDBox mb={0.5}>\n            <MDTypography variant=\"h6\">Thank you for sharing!</MDTypography>\n          </MDBox>\n\n          <MDBox display=\"flex\" justifyContent=\"center\">\n            <MDBox mr={1.5}>\n              <MDButton\n                component={Link}\n                href=\"//twitter.com/intent/tweet?text=Check%20Material%20Dashboard%20React%20made%20by%20%40CreativeTim%20%23webdesign%20%23dashboard%20%23react%20%mui&url=https%3A%2F%2Fwww.creative-tim.com%2Fproduct%2Fmaterial-dashboard-react\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                color=\"dark\"\n              >\n                <TwitterIcon />\n                &nbsp; Tweet\n              </MDButton>\n            </MDBox>\n            <MDButton\n              component={Link}\n              href=\"https://www.facebook.com/sharer/sharer.php?u=https://www.creative-tim.com/product/material-dashboard-react\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              color=\"dark\"\n            >\n              <FacebookIcon />\n              &nbsp; Share\n            </MDButton>\n          </MDBox>\n        </MDBox>\n      </MDBox>\n    </ConfiguratorRoot>\n  );\n}\n\nexport default Configurator;\n"]},"metadata":{},"sourceType":"module"}