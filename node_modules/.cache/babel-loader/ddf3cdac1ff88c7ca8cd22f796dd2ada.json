{"ast":null,"code":"import axios from \"axios\";\nimport { apiUrl } from \"configuration/config\";\nimport * as types from \"./actionType\";\nexport const AuthLoginAction = (email, password) => async dispatch => {\n  console.log(`${apiUrl}/login`, email, password);\n  const data = {\n    email: email,\n    password: password\n  };\n\n  try {\n    const response = await axios.post(`${apiUrl}/login`, data);\n    console.log(response.data.user.token);\n\n    if (response.data.success) {\n      localStorage.setItem(\"token\", response.data.token);\n      dispatch({\n        type: types.AUTH_LOGGED_IN,\n        payload: {\n          token: response.data.user.token,\n          userData: response.data.user\n        }\n      });\n    }\n  } catch (e) {\n    console.log(e.response.data);\n    dispatch({\n      type: types.AUTH_LOGGED_IN_ERROR,\n      payload: e.response.data.message\n    });\n  }\n};\nexport const getAllUsers = token => async dispatch => {\n  try {\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    const response = await axios.get(`${apiUrl}/admin/users`, {\n      headers\n    });\n\n    if (response.data.status) {\n      dispatch({\n        type: types.GET_ALL_USERS,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllServices = token => async dispatch => {\n  console.log(\"token\", token);\n\n  try {\n    const headers = {\n      Authorization: `Bearer 37|IjQtii013SjOvYaaLlOcgvO8H3U1e0Te6vMJzniF`,\n      Accept: \"application/json\"\n    };\n    const response = await axios.get(`${apiUrl}/admin/services`, {\n      headers\n    });\n\n    if (response.data.status) {\n      dispatch({\n        type: types.GET_ALL_SERVICES,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const AuthLogoutAction = () => async dispatch => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: types.AUTH_LOGGED_OUT,\n    payload: {\n      token: \"\",\n      userData: \"\"\n    }\n  });\n};","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/store/Actions/index.js"],"names":["axios","apiUrl","types","AuthLoginAction","email","password","dispatch","console","log","data","response","post","user","token","success","localStorage","setItem","type","AUTH_LOGGED_IN","payload","userData","e","AUTH_LOGGED_IN_ERROR","message","getAllUsers","headers","Authorization","get","status","GET_ALL_USERS","error","getAllServices","Accept","GET_ALL_SERVICES","AuthLogoutAction","removeItem","AUTH_LOGGED_OUT"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { apiUrl } from \"configuration/config\";\nimport * as types from \"./actionType\";\n\nexport const AuthLoginAction = (email, password) => async (dispatch) => {\n  console.log(`${apiUrl}/login`, email, password);\n  const data = {\n    email: email,\n    password: password,\n  };\n\n  try {\n    const response = await axios.post(`${apiUrl}/login`, data);\n    console.log(response.data.user.token);\n    if (response.data.success) {\n      localStorage.setItem(\"token\", response.data.token);\n      dispatch({\n        type: types.AUTH_LOGGED_IN,\n        payload: {\n          token: response.data.user.token,\n          userData: response.data.user,\n        },\n      });\n    }\n  } catch (e) {\n    console.log(e.response.data);\n    dispatch({\n      type: types.AUTH_LOGGED_IN_ERROR,\n      payload: e.response.data.message,\n    });\n  }\n};\n\nexport const getAllUsers = (token) => async (dispatch) => {\n  try {\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n    const response = await axios.get(`${apiUrl}/admin/users`, {\n      headers,\n    });\n    if (response.data.status) {\n      dispatch({\n        type: types.GET_ALL_USERS,\n        payload: response.data.data,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllServices = (token) => async (dispatch) => {\n  console.log(\"token\", token);\n  try {\n    const headers = {\n      Authorization: `Bearer 37|IjQtii013SjOvYaaLlOcgvO8H3U1e0Te6vMJzniF`,\n      Accept: \"application/json\",\n    };\n    const response = await axios.get(`${apiUrl}/admin/services`, {\n      headers,\n    });\n    if (response.data.status) {\n      dispatch({\n        type: types.GET_ALL_SERVICES,\n        payload: response.data.data,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const AuthLogoutAction = () => async (dispatch) => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: types.AUTH_LOGGED_OUT,\n    payload: {\n      token: \"\",\n      userData: \"\",\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}