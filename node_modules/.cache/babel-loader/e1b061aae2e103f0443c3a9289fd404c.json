{"ast":null,"code":"var _jsxFileName = \"D:\\\\Daniyal khan\\\\React\\\\Runmator_Dashboard\\\\src\\\\layouts\\\\services\\\\data\\\\servicesData.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\n// Soft UI Dashboard React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDAvatar from \"components/MDAvatar\";\nimport MDBadge from \"components/MDBadge\";\nimport MDButton from \"components/MDButton\"; // Images\n// import logoXD from \"assets/images/small-logos/logo-xd.svg\";\n// import logoAtlassian from \"assets/images/small-logos/logo-atlassian.svg\";\n// import logoSlack from \"assets/images/small-logos/logo-slack.svg\";\n// import logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\n// import logoJira from \"assets/images/small-logos/logo-jira.svg\";\n// import logoInvesion from \"assets/images/small-logos/logo-invision.svg\";\n\nimport team2 from \"assets/images/accident.png\";\nimport team3 from \"assets/images/battery.png\";\nimport team4 from \"assets/images/flattyre.png\";\nimport team5 from \"assets/images/fuelout.png\";\nimport team6 from \"assets/images/towing.png\";\nimport { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getAllServices } from \"store/Actions\";\nimport { deactivateService } from \"store/Actions\";\nimport { activateService } from \"store/Actions\";\nimport { updateService } from \"store/Actions\";\nimport { imageUrl } from \"configuration/config\";\nimport { addService } from \"store/Actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction servicesData() {\n  _s();\n\n  const [services, setServices] = useState([]);\n  const userAuthReducer = useSelector(state => state === null || state === void 0 ? void 0 : state.userAuthReducer);\n  const [isLoading, setIsLoading] = useState(false);\n  const accessToken = \"16|NeLmmgHSYJdPFN3bwlsSAi2yG8octgtBoJYEzbgv\";\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const dispatch = useDispatch();\n\n  const Author = _ref => {\n    let {\n      image,\n      name,\n      email\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(MDBox, {\n      display: \"flex\",\n      alignItems: \"center\",\n      lineHeight: 1,\n      children: [/*#__PURE__*/_jsxDEV(MDAvatar, {\n        src: image,\n        name: name,\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n        ml: 2,\n        lineHeight: 1,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          display: \"block\",\n          variant: \"button\",\n          fontWeight: \"medium\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"caption\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  };\n\n  const Job = _ref2 => {\n    let {\n      title,\n      description\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(MDBox, {\n      lineHeight: 1,\n      textAlign: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n        display: \"block\",\n        variant: \"caption\",\n        color: \"text\",\n        fontWeight: \"medium\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n        variant: \"caption\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    dispatch(getAllServices()).then(() => {\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    var _userAuthReducer$serv;\n\n    if ((userAuthReducer === null || userAuthReducer === void 0 ? void 0 : (_userAuthReducer$serv = userAuthReducer.services) === null || _userAuthReducer$serv === void 0 ? void 0 : _userAuthReducer$serv.length) > 0) {\n      setServices(userAuthReducer === null || userAuthReducer === void 0 ? void 0 : userAuthReducer.services);\n    }\n  }, [userAuthReducer === null || userAuthReducer === void 0 ? void 0 : userAuthReducer.services]);\n\n  const _onClickAction = ele => {\n    setIsLoading(true);\n\n    if ((ele === null || ele === void 0 ? void 0 : ele.services_status) == 1) {\n      dispatch(deactivateService(accessToken, ele === null || ele === void 0 ? void 0 : ele.id)).then(() => {\n        dispatch(getAllServices()).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n\n    if ((ele === null || ele === void 0 ? void 0 : ele.services_status) == 0) {\n      dispatch(activateService(accessToken, ele === null || ele === void 0 ? void 0 : ele.id)).then(() => {\n        dispatch(getAllServices()).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n  };\n\n  const _onSubmitUploadEdit = async (serviceName, serviceIcon) => {\n    const formData = new FormData();\n    formData.append(\"services_name\", serviceName);\n    formData.append(\"services_icon\", serviceIcon);\n    setIsLoading(true);\n    dispatch(updateService(accessToken, formData, selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id)).then(() => {\n      dispatch(getAllServices()).then(() => {\n        setIsLoading(false);\n        setSelectedItem(null);\n        setShowEditModal(false);\n      });\n    });\n  };\n\n  const _onSubmitUploadAdd = async (serviceName, serviceIcon) => {\n    const formData = new FormData();\n    formData.append(\"services_name\", serviceName);\n    formData.append(\"services_icon\", serviceIcon);\n    setIsLoading(true);\n    dispatch(addService(accessToken, formData)).then(() => {\n      dispatch(getAllServices()).then(() => {\n        setIsLoading(false);\n        setShowAddModal(false);\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (selectedItem !== null) {\n      setShowEditModal(true);\n    }\n  }, [selectedItem]);\n  return {\n    columns: [{\n      Header: \"service\",\n      accessor: \"service\",\n      width: \"30%\",\n      align: \"left\"\n    }, {\n      Header: \"status\",\n      accessor: \"status\",\n      align: \"center\"\n    }, {\n      Header: \"action\",\n      accessor: \"action\",\n      align: \"center\"\n    }, {\n      Header: \"activity\",\n      accessor: \"activity\",\n      align: \"center\"\n    }],\n    rows: services === null || services === void 0 ? void 0 : services.map(ele => {\n      return {\n        service: /*#__PURE__*/_jsxDEV(Author, {\n          image: `${imageUrl}${ele === null || ele === void 0 ? void 0 : ele.services_icon}/${ele === null || ele === void 0 ? void 0 : ele.services_icon}`,\n          name: ele.services_name,\n          email: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this),\n        status: /*#__PURE__*/_jsxDEV(MDBox, {\n          ml: -1,\n          children: /*#__PURE__*/_jsxDEV(MDBadge, {\n            badgeContent: (ele === null || ele === void 0 ? void 0 : ele.services_status) === 0 ? \"INACTIVE\" : \"ACTIVE\",\n            color: (ele === null || ele === void 0 ? void 0 : ele.services_status) === 0 ? \"dark\" : \"success\",\n            variant: \"gradient\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this),\n        action: /*#__PURE__*/_jsxDEV(MDBox, {\n          onClick: () => {\n            setSelectedItem(ele);\n          },\n          children: /*#__PURE__*/_jsxDEV(MDButton, {\n            variant: \"gradient\",\n            color: \"secondary\",\n            children: \"Edit Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this),\n        activity: isLoading ? /*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"button\",\n          fontWeight: \"regular\",\n          display: \"block\",\n          color: \"info\",\n          fontWeight: \"medium\",\n          textGradient: true,\n          children: \"Please Wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(MDBox, {\n          onClick: () => {\n            setIsLoading(true);\n\n            _onClickAction(ele);\n          },\n          children: /*#__PURE__*/_jsxDEV(MDButton, {\n            variant: \"gradient\",\n            color: \"secondary\",\n            children: (ele === null || ele === void 0 ? void 0 : ele.services_status) === 1 ? \"Deactivate Now\" : \"Activate Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      };\n    }),\n    showEditModal: showEditModal,\n    setShowEditModal: setShowEditModal,\n    showAddModal: showAddModal,\n    setShowAddModal: setShowAddModal,\n    selectedItem: selectedItem,\n    isLoading: isLoading,\n    onSubmitEdit: _onSubmitUploadEdit,\n    onSubmitAdd: _onSubmitUploadAdd\n  };\n} // const mapStateToProps = ({ userAuthReducer }) => {\n//   return { userAuthReducer };\n// };\n// export default connect(null, null)(servicesData);\n\n\n_s(servicesData, \"vSBOgIm7USCIgChDEXZB9CtUUmA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport default servicesData;","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/layouts/services/data/servicesData.js"],"names":["MDBox","MDTypography","MDAvatar","MDBadge","MDButton","team2","team3","team4","team5","team6","useEffect","useState","connect","useDispatch","useSelector","getAllServices","deactivateService","activateService","updateService","imageUrl","addService","servicesData","services","setServices","userAuthReducer","state","isLoading","setIsLoading","accessToken","showEditModal","setShowEditModal","showAddModal","setShowAddModal","selectedItem","setSelectedItem","dispatch","Author","image","name","email","Job","title","description","then","length","_onClickAction","ele","services_status","id","_onSubmitUploadEdit","serviceName","serviceIcon","formData","FormData","append","_onSubmitUploadAdd","columns","Header","accessor","width","align","rows","map","service","services_icon","services_name","status","action","activity","onSubmitEdit","onSubmitAdd"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n\n// Soft UI Dashboard React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\nimport MDAvatar from \"components/MDAvatar\";\nimport MDBadge from \"components/MDBadge\";\nimport MDButton from \"components/MDButton\";\n\n// Images\n// import logoXD from \"assets/images/small-logos/logo-xd.svg\";\n// import logoAtlassian from \"assets/images/small-logos/logo-atlassian.svg\";\n// import logoSlack from \"assets/images/small-logos/logo-slack.svg\";\n// import logoSpotify from \"assets/images/small-logos/logo-spotify.svg\";\n// import logoJira from \"assets/images/small-logos/logo-jira.svg\";\n// import logoInvesion from \"assets/images/small-logos/logo-invision.svg\";\nimport team2 from \"assets/images/accident.png\";\nimport team3 from \"assets/images/battery.png\";\nimport team4 from \"assets/images/flattyre.png\";\nimport team5 from \"assets/images/fuelout.png\";\nimport team6 from \"assets/images/towing.png\";\nimport { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getAllServices } from \"store/Actions\";\nimport { deactivateService } from \"store/Actions\";\nimport { activateService } from \"store/Actions\";\nimport { updateService } from \"store/Actions\";\nimport { imageUrl } from \"configuration/config\";\nimport { addService } from \"store/Actions\";\n\nfunction servicesData() {\n  const [services, setServices] = useState([]);\n  const userAuthReducer = useSelector((state) => state?.userAuthReducer);\n  const [isLoading, setIsLoading] = useState(false);\n  const accessToken = \"16|NeLmmgHSYJdPFN3bwlsSAi2yG8octgtBoJYEzbgv\";\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const dispatch = useDispatch();\n\n  const Author = ({ image, name, email }) => (\n    <MDBox display=\"flex\" alignItems=\"center\" lineHeight={1}>\n      <MDAvatar src={image} name={name} size=\"sm\" />\n      <MDBox ml={2} lineHeight={1}>\n        <MDTypography display=\"block\" variant=\"button\" fontWeight=\"medium\">\n          {name}\n        </MDTypography>\n        <MDTypography variant=\"caption\">{email}</MDTypography>\n      </MDBox>\n    </MDBox>\n  );\n\n  const Job = ({ title, description }) => (\n    <MDBox lineHeight={1} textAlign=\"left\">\n      <MDTypography\n        display=\"block\"\n        variant=\"caption\"\n        color=\"text\"\n        fontWeight=\"medium\"\n      >\n        {title}\n      </MDTypography>\n      <MDTypography variant=\"caption\">{description}</MDTypography>\n    </MDBox>\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    dispatch(getAllServices()).then(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (userAuthReducer?.services?.length > 0) {\n      setServices(userAuthReducer?.services);\n    }\n  }, [userAuthReducer?.services]);\n\n  const _onClickAction = (ele) => {\n    setIsLoading(true);\n\n    if (ele?.services_status == 1) {\n      dispatch(deactivateService(accessToken, ele?.id)).then(() => {\n        dispatch(getAllServices()).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n    if (ele?.services_status == 0) {\n      dispatch(activateService(accessToken, ele?.id)).then(() => {\n        dispatch(getAllServices()).then(() => {\n          setIsLoading(false);\n        });\n      });\n    }\n  };\n\n  const _onSubmitUploadEdit = async (serviceName, serviceIcon) => {\n    const formData = new FormData();\n    formData.append(\"services_name\", serviceName);\n    formData.append(\"services_icon\", serviceIcon);\n\n    setIsLoading(true);\n\n    dispatch(updateService(accessToken, formData, selectedItem?.id)).then(\n      () => {\n        dispatch(getAllServices()).then(() => {\n          setIsLoading(false);\n          setSelectedItem(null);\n          setShowEditModal(false);\n        });\n      }\n    );\n  };\n\n  const _onSubmitUploadAdd = async (serviceName, serviceIcon) => {\n    const formData = new FormData();\n    formData.append(\"services_name\", serviceName);\n    formData.append(\"services_icon\", serviceIcon);\n\n    setIsLoading(true);\n\n    dispatch(addService(accessToken, formData)).then(() => {\n      dispatch(getAllServices()).then(() => {\n        setIsLoading(false);\n        setShowAddModal(false);\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (selectedItem !== null) {\n      setShowEditModal(true);\n    }\n  }, [selectedItem]);\n  return {\n    columns: [\n      { Header: \"service\", accessor: \"service\", width: \"30%\", align: \"left\" },\n      { Header: \"status\", accessor: \"status\", align: \"center\" },\n      { Header: \"action\", accessor: \"action\", align: \"center\" },\n      { Header: \"activity\", accessor: \"activity\", align: \"center\" },\n    ],\n\n    rows: services?.map((ele) => {\n      return {\n        service: (\n          <Author\n            image={`${imageUrl}${ele?.services_icon}/${ele?.services_icon}`}\n            name={ele.services_name}\n            email=\"\"\n          />\n        ),\n        status: (\n          <MDBox ml={-1}>\n            <MDBadge\n              badgeContent={ele?.services_status === 0 ? \"INACTIVE\" : \"ACTIVE\"}\n              color={ele?.services_status === 0 ? \"dark\" : \"success\"}\n              variant=\"gradient\"\n              size=\"sm\"\n            />\n          </MDBox>\n        ),\n\n        action: (\n          <MDBox\n            onClick={() => {\n              setSelectedItem(ele);\n            }}\n          >\n            <MDButton variant=\"gradient\" color=\"secondary\">\n              Edit Details\n            </MDButton>\n          </MDBox>\n        ),\n\n        activity: isLoading ? (\n          <MDTypography\n            variant=\"button\"\n            fontWeight=\"regular\"\n            display=\"block\"\n            color=\"info\"\n            fontWeight=\"medium\"\n            textGradient\n          >\n            Please Wait\n          </MDTypography>\n        ) : (\n          <MDBox\n            onClick={() => {\n              setIsLoading(true);\n              _onClickAction(ele);\n            }}\n          >\n            <MDButton variant=\"gradient\" color=\"secondary\">\n              {ele?.services_status === 1 ? \"Deactivate Now\" : \"Activate Now\"}\n            </MDButton>\n          </MDBox>\n        ),\n      };\n    }),\n    showEditModal: showEditModal,\n    setShowEditModal: setShowEditModal,\n    showAddModal: showAddModal,\n    setShowAddModal: setShowAddModal,\n    selectedItem: selectedItem,\n    isLoading: isLoading,\n    onSubmitEdit: _onSubmitUploadEdit,\n    onSubmitAdd: _onSubmitUploadAdd,\n  };\n}\n\n// const mapStateToProps = ({ userAuthReducer }) => {\n//   return { userAuthReducer };\n// };\n\n// export default connect(null, null)(servicesData);\nexport default servicesData;\n"]},"metadata":{},"sourceType":"module"}