{"ast":null,"code":"import axios from \"axios\";\nimport { apiUrl } from \"configuration/config\";\nimport * as types from \"./actionType\";\nexport const AuthLoginAction = (email, password) => async dispatch => {\n  console.log(`${apiUrl}/login`, email, password);\n  const data = {\n    email: email,\n    password: password\n  };\n\n  try {\n    const response = await axios.post(`${apiUrl}/login`, data);\n    console.log(response.data.user.token); // if (response.data.success) {\n    //   localStorage.setItem(\"token\", response.data.token);\n    //   dispatch({\n    //     type: types.AUTH_LOGGED_IN,\n    //     payload: {\n    //       token: response.data.user.token,\n    //       userData: response.data.user,\n    //     },\n    //   });\n    // }\n  } catch (e) {\n    console.log(e.response.data); // dispatch({\n    //   type: types.AUTH_LOGGED_IN_ERROR,\n    //   payload: e.response.data.message,\n    // });\n  }\n};\nexport const getAllUsers = token => async dispatch => {\n  try {\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    const response = await axios.get(`${apiUrl}/admin/users`, {\n      headers\n    });\n\n    if (response.data.status) {\n      dispatch({\n        type: types.GET_ALL_USERS,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllServices = token => async dispatch => {\n  console.log(\"token\", token);\n\n  try {\n    const headers = {\n      Authorization: `Bearer 37|IjQtii013SjOvYaaLlOcgvO8H3U1e0Te6vMJzniF`,\n      Accept: \"application/json\"\n    };\n    const response = await axios.get(`${apiUrl}/admin/services`, {\n      headers\n    });\n\n    if (response.data.status) {\n      dispatch({\n        type: types.GET_ALL_SERVICES,\n        payload: response.data.data\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const AuthLogoutAction = () => async dispatch => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: types.AUTH_LOGGED_OUT,\n    payload: {\n      token: \"\",\n      userData: \"\"\n    }\n  });\n};","map":{"version":3,"sources":["D:/Daniyal khan/React/Runmator_Dashboard/src/store/Actions/index.js"],"names":["axios","apiUrl","types","AuthLoginAction","email","password","dispatch","console","log","data","response","post","user","token","e","getAllUsers","headers","Authorization","get","status","type","GET_ALL_USERS","payload","error","getAllServices","Accept","GET_ALL_SERVICES","AuthLogoutAction","localStorage","removeItem","AUTH_LOGGED_OUT","userData"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { apiUrl } from \"configuration/config\";\nimport * as types from \"./actionType\";\n\nexport const AuthLoginAction = (email, password) => async (dispatch) => {\n  console.log(`${apiUrl}/login`, email, password);\n  const data = {\n    email: email,\n    password: password,\n  };\n\n  try {\n    const response = await axios.post(`${apiUrl}/login`, data);\n    console.log(response.data.user.token);\n    // if (response.data.success) {\n    //   localStorage.setItem(\"token\", response.data.token);\n    //   dispatch({\n    //     type: types.AUTH_LOGGED_IN,\n    //     payload: {\n    //       token: response.data.user.token,\n    //       userData: response.data.user,\n    //     },\n    //   });\n    // }\n  } catch (e) {\n    console.log(e.response.data);\n    // dispatch({\n    //   type: types.AUTH_LOGGED_IN_ERROR,\n    //   payload: e.response.data.message,\n    // });\n  }\n};\n\nexport const getAllUsers = (token) => async (dispatch) => {\n  try {\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n    const response = await axios.get(`${apiUrl}/admin/users`, {\n      headers,\n    });\n    if (response.data.status) {\n      dispatch({\n        type: types.GET_ALL_USERS,\n        payload: response.data.data,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllServices = (token) => async (dispatch) => {\n  console.log(\"token\", token);\n  try {\n    const headers = {\n      Authorization: `Bearer 37|IjQtii013SjOvYaaLlOcgvO8H3U1e0Te6vMJzniF`,\n      Accept: \"application/json\",\n    };\n    const response = await axios.get(`${apiUrl}/admin/services`, {\n      headers,\n    });\n    if (response.data.status) {\n      dispatch({\n        type: types.GET_ALL_SERVICES,\n        payload: response.data.data,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const AuthLogoutAction = () => async (dispatch) => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: types.AUTH_LOGGED_OUT,\n    payload: {\n      token: \"\",\n      userData: \"\",\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}